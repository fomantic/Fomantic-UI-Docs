---
layout      : 'default'
css         : 'new'
standalone  : true
order       : 1

title       : "What's New"
description : 'An introduction to new features found in the latest release'
type        : 'Main'
---

<%- @partial('header',  { tabs: { twoseven: 'New in 2.7', twosix: 'New in 2.6', twofive: 'New in 2.5', twofour: 'New in 2.4', twothree: 'New in 2.3', twotwo: 'New in 2.2' } }) %>
<script src="/javascript/loader.js"></script>
<script src="/javascript/new.js"></script>

<div class="main ui intro container">

  <div class="ui active tab" data-tab="twoseven">
    <h2 class="ui dividing header">Merry Christmas ðŸŽ…</h2>
    <p>Fomantic <code>2.7</code> brings lots of new goodies and fixes and just in time for christmas!</p>

    <h4>Announcement</h4>
    <p>
      With 2019 around the corner and a lot of discussion we (core contributors) have agreed to move our core focus to FUI v3.0.
      This doesn't mean we won't be working on 2.x but means releases may be slowed down a little due to more work being put into v3.0.
      You can read more about the future of FUI and v3.0 <a href="https://github.com/fomantic/Fomantic-UI/issues/319">here</a>
    </p>

    <h4>Notes:</h4>
    <ul>
      <li>
        With this release we removed the dependency of <code>prompt-sui</code> which removes the child dependency of <code>event-stream</code> this ensures
        that the library won't be downloading any (now deprecated) malicious code. If you want to learn more about the recent security
        issues with <code>event-stream</code> please read <a href="https://github.com/fomantic/Fomantic-UI/issues/268">this issue</a>.
      </li>
      <li>
        In this release we had a big focus on removing a lot of the <code>!important</code> usage which in turn produced lots of issues.
        Now with a big help from our core contributors we have removed ~85% of the usage and reduced the complexity of a lot of
        the color code base which makes it easier to make changes and helps reduce the size of the general code base aswell as removing duplicate code.
      </li>
    </ul>

    <h2 class="ui dividing header">
      New features
    </h2>
    <div class="content example">
      <h4 class="ui header">
        Slider
      </h4>
      <p>In <code>2.7</code> we renamed the range component to slider and also add a lot of new features to play around with.</p>

      <p>Labeled & Ticked Sliders</p>
      <div class="ui labeled ticked slider" id="ticket-slider-27"></div>

      <p>Range Slider (yes an actual range slider)</p>
      <div class="ui labeled ticked range slider" id="slider-range-27"></div>
      <div class="ui input">
        <input type="text" id="range-slider-input-27" disabled="">
      </div>

      <p>Vertical Slider</p>
      <div style="height: 200px;">
        <div class="ui vertical slider" id="vertical-slider-27"></div>
      </div>

      <br />
      <p>And a lot more, check the release notes to see all slider changes</p>
    </div>

    <div class="content example">
      <h4 class="ui header">
        Loader
      </h4>
      <p>We have added some new loader styles in <code>2.7</code> so your not restricted to a boring spinner</p>

      <p>Doubled</p>
      <div class="ui segment">
        <div class="ui active slow green double loader"></div>
        <br>
        <br>
        <br>
        <br>
      </div>

      <p>Elastic</p>
      <div class="ui segment">
        <div class="ui active blue elastic loader"></div>
        <br>
        <br>
        <br>
        <br>
      </div>

      <p>You can also apply all loader modifiers to these loaders</p>
    </div>

    <div class="content example">
      <h4 class="ui header">
        Colors
      </h4>
      <p>
        In <code>2.7</code> we went colors mad and changed a lot of the code base to make colors more consistent
        across the framework and to make it so you can define your own colors ðŸŽ‰
      </p>

      <p>
        In <code>/globals/colors.less</code> you will find a list of colors which you can tweak to your liking.
        You can change color values and even rename or add your own colors!

        You will notice there is a lot of variables like <code>@primaryColor</code> which are located in <code>/globals/site.variables</code>
        this allows this change to stay backwards compatible.
      </p>

      <p>
        We also have added a new element called <code>text</code> which allows you to color text with the framework colors via wrapping
        text in side of a <code>&lt;span&gt;</code>.
      </p>
      <div class="ui segment">
        <p>As you can see I am <span class="ui red text">red</span> and I am <span class="ui blue text">blue</span>.</p>
      </div>
      <div class="ui inverted segment">
        <p>Oh and you can use inverted colors like this inverted <span class="ui inverted purple text">purple</span> and <span class="ui inverted orange text">orange</span> text</p>
      </div>
    </div>

    <br />

    <p>We didn't just stop there we also added a lot of cool new features for other components and addressed lots of bugs. You can find a full list of changes
      <a href="https://github.com/fomantic/Fomantic-UI/commit/cb3026ed46714ef19b87938ea7bd884d1ab2d92d">here</a></p>
  </div>

  <div class="ui tab" data-tab="twosix">
    <h2 class="ui dividing header">Toasty loaders</h2>
    <p>Fomantic <code>2.6</code> brings a new components for handling content loading <a href="/elements/placeholder.html"><code>ui placeholder</code></a>, as well as a new type of <code>segment</code> used to reserve space for content: <a href="/elements/segment.html#empty"><code>ui placeholder segment</code></a>.</p>

    <p>Additionally several important component updates are included in this release.
    <div class="ui large bulleted list">
      <div class="item">Modals have been re-architected to use hybrid flex support, falling back to JS positioning for more complex use-cases (or older browsers). </div>
      <div class="item">Dropdowns now include a <code>clearable</code> setting for letting users reset dropdowns to its empty state.</div>
    </div>

    <p>We are also introducing the new <code>Toast</code> component</p>

    <div class="ui ignored warning message">If you are upgrading from a previous SUI version, be sure to add <code>@placeholder</code> & <code>@toast</code> to your <a href="/introduction/build-tools.html"><code>theme.config</code></a> to include the placeholder or toast components in your code.</div>

    <h2 class="ui dividing header">
      New UI Component
    </h2>
    <div class="content example">
      <h4 class="ui header">
        Placeholders
      </h4>
      <P><a href="/elements/placeholder.html">Placeholders</a> can be used to reduce the jarringness, and perceived load time when loading new content</p>
      <%- @partial('examples/content-loader') %>
    </div>
    <div class="another example">
      <div class="ui relaxed divided list">
        <div class="item">
          <i class="large github middle aligned icon"></i>
          <div class="content">
            <a class="header">Semantic-Org/Semantic-UI-Docs</a>
            <div class="description">Updated 22 mins ago</div>
          </div>
        </div>
        <div class="item">
          <i class="large github middle aligned icon"></i>
          <div class="content">
            <div class="ui placeholder">
              <div class="paragraph">
                <div class="medium line"></div>
                <div class="short line"></div>
              </div>
            </div>
          </div>
        </div>
        <div class="item">
          <i class="large github middle aligned icon"></i>
          <div class="content">
            <div class="ui placeholder">
              <div class="paragraph">
                <div class="medium line"></div>
                <div class="short line"></div>
              </div>
            </div>
          </div>
        </div>
        <div class="item">
          <i class="large github middle aligned icon"></i>
          <div class="content">
            <div class="ui placeholder">
              <div class="paragraph">
                <div class="medium line"></div>
                <div class="short line"></div>
              </div>
            </div>
          </div>
        </div>
        <div class="item">
          <i class="large github middle aligned icon"></i>
          <div class="content">
            <div class="ui placeholder">
              <div class="paragraph">
                <div class="medium line"></div>
                <div class="short line"></div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
    <div class="example">
      <h4 class="ui header">
        Placeholder Segment
      </h4>
      <p><a href="/elements/segment.html#placeholder">Placeholder segments</a> allow you to reserve space in your design for where content is intended to appear. This is useful when a page should prompt a user about its intended functionality, even when no content is present.</p>
      <div class="ui placeholder segment">
        <div class="ui icon header">
          <i class="dont icon"></i>
          No users have been added yet
        </div>
        <div class="ui primary button">Add User</div>
      </div>
    </div>
    <div class="another example">
      <div class="ui placeholder segment">
        <div class="ui two column center aligned grid">
          <div class="ui vertical divider">Or</div>
          <div class="middle aligned row">
            <div class="column">
              <div class="ui icon header">
                <i class="search icon"></i>
                Find Country
              </div>
              <div class="field">
                <div class="ui search">
                  <div class="ui icon input">
                    <input class="prompt" type="text" placeholder="Search countries...">
                    <i class="search icon"></i>
                  </div>
                  <div class="results"></div>
                </div>
              </div>
            </div>
            <div class="column">
              <div class="ui icon header">
                <i class="world icon"></i>
                Add New Country
              </div>
              <div class="ui primary button">
                Create
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
    <h2 class="ui dividing header">
      New Features
    </h2>
    <div class="clearable no example">
      <h4 class="ui header">
        Clearable Dropdowns
      </h4>
      <p>Now dropdowns can specify that their content can be cleared with <code>clearable: true</code>.</p>

      <div class="ui search selection dropdown">
        <input type="hidden" name="country" value="kr">
        <div class="text">
          <i class="kr flag"></i>South Korea
        </div>
        <i class="dropdown icon"></i>
        <%- @partial('examples/single/flag-menu') %>
      </div>
      <div class="ui divider"></div>
      <div class="ui secondary segment">
        Show me
        <div class="ui inline scrolling dropdown">
          <input type="hidden" name="skill" value="css">
          <div class="text">css</div>
          <i class="dropdown icon"></i>
          <div class="menu">
            <%- @partial('examples/single/preset-menu') %>
          </div>
        </div>
        classes currently available.
      </div>
    </div>
    <div class="example">
      <h4 class="ui header">
        Improved Flexbox Modals
      </h4>
      <p>Although flex-box were introduced in <code>2.3.0</code> there were limitations which may have prevented some advanced use-cases. For example, flexbox modals did not support modals that used <code>detachable: false</code> and werent directly inside dimmer flex containers. Also some flex browsers (IE11) do not support absolutely positioned elements inside flex containers, so multiple overlapping modals could not be used in those cases.</p>
      <p>
        <code>2.4.0</code> solves this by introducing a hybrid flex system, that will fall back to javascript positioning for browsers or layouts that aren't compatible with flex.
      </p>
    </div>
  </div>

  <div class="ui tab" data-tab="twofive">
    <h2 class="ui dividing header">The beginning of something new</h2>

    <p>Fomantic-UI is starting to mature and we are starting to push bigger and better updates, we hope you like the new Calendar and Range slider modules!</p>

    <h2 class="ui dividing header">New Components</h2>

    <div class="no example">
      <h4 class="ui header">Calendar</h4>
      <div class="ui calendar">
        <div class="ui input left icon">
          <i class="calendar icon"></i>
          <input type="text" placeholder="Date/Time">
        </div>
      </div>
    </div>

    <div class="no example">
      <h4 class="ui header">Range Slider</h4>
      <div class="ui range" id="range-25"></div>
      <br/>
      <div class="ui input">
        <input type="text" id="slider-input-25" disabled="">
      </div>
    </div>

    <div class="no example">
      <h4 class="ui header">FontAwesome 5.3.1</h4>
      <p>We have updated the icons to the newest FontAwesome release</p>
      <i class="calendar huge icon"></i>
      <i class="city huge icon"></i>
      <i class="envelope open text huge icon"></i>
      <i class="hamsa huge icon"></i>
      <i class="peace huge icon"></i>
      <i class="socks huge icon"></i>
      <i class="wifi huge icon"></i>
    </div>

    <div class="no example">
      <h4 class="ui header">Colored Loaders</h4>
      <div class="ui active red inline loader"></div>
      <div class="ui active orange inline loader"></div>
      <div class="ui active blue inline loader"></div>
    </div>

    <div class="no example">
      <h4 class="ui header">More Inverted Components</h4>
      <p>In 2.5 we made a big push to add more support for inverted components</p>

      <h5 class="ui header">Comments</h5>
      <div class="ui inverted segment">
        <div class="ui inverted threaded comments">
          <h3 class="ui inverted dividing header">Comments</h3>
          <div class="comment">
            <a class="avatar">
              <img src="/images/avatar/small/matt.jpg">
            </a>
            <div class="content">
              <a class="author">Matt</a>
              <div class="metadata">
                <span class="date">Today at 5:42PM</span>
              </div>
              <div class="text">
                How artistic!
              </div>
              <div class="actions">
                <a class="reply">Reply</a>
              </div>
            </div>
          </div>
          <div class="comment">
            <a class="avatar">
              <img src="/images/avatar/small/elliot.jpg">
            </a>
            <div class="content">
              <a class="author">Elliot Fu</a>
              <div class="metadata">
                <span class="date">Yesterday at 12:30AM</span>
              </div>
              <div class="text">
                <p>This has been very useful for my research. Thanks as well!</p>
              </div>
              <div class="actions">
                <a class="reply">Reply</a>
              </div>
            </div>
            <div class="comments">
              <div class="comment">
                <a class="avatar">
                  <img src="/images/avatar/small/jenny.jpg">
                </a>
                <div class="content">
                  <a class="author">Jenny Hess</a>
                  <div class="metadata">
                    <span class="date">Just now</span>
                  </div>
                  <div class="text">
                    Elliot you are always so right :)
                  </div>
                  <div class="actions">
                    <a class="reply">Reply</a>
                  </div>
                </div>
              </div>
            </div>
          </div>
          <div class="comment">
            <a class="avatar">
              <img src="/images/avatar/small/joe.jpg">
            </a>
            <div class="content">
              <a class="author">Joe Henderson</a>
              <div class="metadata">
                <span class="date">5 days ago</span>
              </div>
              <div class="text">
                Dude, this is awesome. Thanks so much
              </div>
              <div class="actions">
                <a class="reply">Reply</a>
              </div>
            </div>
          </div>
        </div>
      </div>

      <h5 class="ui header">Feed</h5>
      <div class="ui inverted segment">
        <div class="ui inverted feed">
          <div class="event">
            <div class="label">
              <img src="/images/avatar/small/elliot.jpg">
            </div>
            <div class="content">
              <div class="date">
                Just now
              </div>
              <div class="summary">
                <a class="user">
                  Elliot Fu
                </a> posted on his page
              </div>
              <div class="extra text">
                Hey there !
              </div>
            </div>
          </div>
          <div class="event">
            <div class="label">
              <img src="/images/avatar/small/elliot.jpg">
            </div>
            <div class="content">
              <div class="summary">
                <a class="user">
                  Elliot Fu
                </a> added you as a friend
                <div class="date">
                  1 Hour Ago
                </div>
              </div>
            </div>
          </div>
          <div class="event">
            <div class="label">
              <img src="/images/avatar/small/helen.jpg">
            </div>
            <div class="content">
              <div class="summary">
                <a>Helen Troy</a> added <a>2 new illustrations</a>
                <div class="date">
                  4 days ago
                </div>
              </div>
              <div class="extra images">
                <a><img src="/images/wireframe/image.png"></a>
                <a><img src="/images/wireframe/image.png"></a>
              </div>
              <div class="meta">
                <a class="like">
                  <i class="like icon"></i> 1 Like
                </a>
              </div>
            </div>
          </div>
        </div>
      </div>

      <h5 class="ui header">Step</h5>
      <div class="ui inverted segment">
        <div class="ui inverted ordered steps">
          <div class="completed step">
            <div class="content">
              <div class="title">Shipping</div>
              <div class="description">Choose your shipping options</div>
            </div>
          </div>
          <div class="completed step">
            <div class="content">
              <div class="title">Billing</div>
              <div class="description">Enter billing information</div>
            </div>
          </div>
          <div class="active step">
            <div class="content">
              <div class="title">Confirm Order</div>
              <div class="description">Verify order details</div>
            </div>
          </div>
        </div>
      </div>

      <h5 class="ui header">Cards</h5>
      <div class="ui inverted segment">
        <div class="ui inverted cards">
          <div class="card">
            <div class="image">
              <img src="/images/avatar2/large/matthew.png">
            </div>
            <div class="content">
              <a class="header">Matt Giampietro</a>
              <div class="meta">
                <a>Friends</a>
              </div>
              <div class="description">
                Matthew is an interior designer living in New York.
              </div>
            </div>
            <div class="extra content">
        <span class="right floated">
          Joined in 2013
        </span>
              <a>
                <i class="user icon"></i>
                75 Friends
              </a>
            </div>
          </div>
          <div class="card">
            <div class="image">
              <img src="/images/avatar2/large/molly.png">
            </div>
            <div class="content">
              <a class="header">Molly</a>
              <div class="meta">
                <span class="date">Coworker</span>
              </div>
              <div class="description">
                Molly is a personal assistant living in Paris.
              </div>
            </div>
            <div class="extra content">
        <span class="right floated">
          Joined in 2011
        </span>
              <a>
                <i class="user icon"></i>
                35 Friends
              </a>
            </div>
          </div>
          <div class="card">
            <div class="image">
              <img src="/images/avatar2/large/elyse.png">
            </div>
            <div class="content">
              <a class="header">Elyse</a>
              <div class="meta">
                <a>Coworker</a>
              </div>
              <div class="description">
                Elyse is a copywriter working in New York.
              </div>
            </div>
            <div class="extra content">
        <span class="right floated">
          Joined in 2014
        </span>
              <a>
                <i class="user icon"></i>
                151 Friends
              </a>
            </div>
          </div>
        </div>
      </div>
    </div>

    <div class="no example">
      <h4 class="ui header">Horizontal Cards</h4>
      <div class="ui horizontal cards">
        <div class="card">
          <div class="image">
            <img src="/images/avatar2/large/matthew.png">
          </div>
          <div class="content">
            <div class="header">Matt Giampietro</div>
            <div class="meta">
              <a>Friends</a>
            </div>
            <div class="description">
              Matthew is an interior designer living in New York.
            </div>
          </div>
        </div>
        <div class="card">
          <div class="image">
            <img src="/images/avatar2/large/molly.png">
          </div>
          <div class="content">
            <div class="header">Molly</div>
            <div class="meta">
              <span class="date">Coworker</span>
            </div>
            <div class="description">
              Molly is a personal assistant living in Paris.
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>

  <div class="ui tab" data-tab="twofour">
    <h2 class="ui dividing header">A new life</h2>

    <p>With active development slowing down the community has stood up to start a new life for Semantic, welcome to Fomantic-UI.</p>
    <p>You can read the release notes <a href="https://github.com/fomantic/Fomantic-UI/blob/master/RELEASE-NOTES.md">here</a>.</p>

    <h2 class="ui dividing header">New Features</h2>

    <div class="no example">
      <h4 class="ui header">Inverted & basic Primary and Secondary buttons</h4>
      <p>You can now use primary and secondary basic and inverted buttons.</p>
      <div class="ui doubling four column vertically padded grid">
        <div class="row">
          <div class="column"><button class="ui basic primary button">Primary Basic</button></div>
          <div class="column"><button class="ui basic secondary button">Secondary Basic</button></div>
        </div>
        <div class="row">
          <div class="black column"><button class="ui inverted primary button">Primary Inverted</button></div>
          <div class="black column"><button class="ui inverted secondary button">Secondary Inverted</button></div>
          <div class="black column"><button class="ui basic inverted primary button">Primary Inverted</button></div>
          <div class="black column"><button class="ui basic inverted secondary button">Secondary Inverted</button></div>
        </div>
      </div>
    </div>

    <div class="no example">
      <h4 class="ui header">Tertiary buttons</h4>
      <p>New tertiary buttons allow for less important buttons</p>
      <div class="ui doubling eight column vertically padded grid">
        <div class="column"><button class="ui primary tertiary button">Primary</button></div>
        <div class="column"><button class="ui secondary tertiary button">Secondary</button></div>
        <div class="column"><button class="ui red tertiary button">Red</button></div>
        <div class="column"><button class="ui orange tertiary button">Orange</button></div>
        <div class="column"><button class="ui yellow tertiary button">Yellow</button></div>
        <div class="column"><button class="ui olive tertiary button">Olive</button></div>
        <div class="column"><button class="ui green tertiary button">Green</button></div>
        <div class="column"><button class="ui teal tertiary button">Teal</button></div>
        <div class="column"><button class="ui blue tertiary button">Blue</button></div>
        <div class="column"><button class="ui violet tertiary button">Violet</button></div>
        <div class="column"><button class="ui purple tertiary button">Purple</button></div>
        <div class="column"><button class="ui pink tertiary button">Pink</button></div>
        <div class="column"><button class="ui brown tertiary button">Brown</button></div>
        <div class="column"><button class="ui grey tertiary button">Grey</button></div>
        <div class="column"><button class="ui black tertiary button">Black</button></div>
      </div>
    </div>

    <div class="no example">
      <h4 class="ui header">Primary & Secondary colors</h4>
      <p>Headers, Icons and Cards now all have primary and secondary colors</p>
      <div class="ui doubling two column vertically padded grid">
        <div class="column">
          <div class="ui doubling two column vertically padded center aligned grid">
            <div class="column"><div class="ui primary header">Primary Header</div></div>
            <div class="column"><div class="ui secondary header">Secondary Header</div></div>
            <div class="column"><i class="huge primary users icon"></i></div>
            <div class="column"><i class="huge secondary users icon"></i></div>
          </div>
        </div>
        <div class="column">
          <div class="ui doubling two column vertically padded grid">
            <div class="column">
              <a class="ui primary card">
                <div class="image">
                  <img src="/images/wireframe/white-image.png">
                </div>
              </a>
            </div>
            <div class="column">
              <a class="ui secondary card">
                <div class="image">
                  <img src="/images/wireframe/white-image.png">
                </div>
              </a>
            </div>
          </div>
        </div>
      </div>
    </div>

    <div class="no example">
      <h4 class="ui header">Inverted dropdown variation</h4>
      <p>Dropdowns can now be inverted, they look sweet in inverted segments.</p>
      <div class="ui doubling two column vertically padded grid">
        <div class="column">
          <div class="ui inverted segment">
            <div class="ui inverted selection dropdown">
              <input type="hidden" name="choices">
              <div class="default text">Select choice</div>
              <i class="dropdown icon"></i>
              <div class="menu">
                <div class="item">Choice 1</div>
                <div class="item">Choice 2</div>
                <div class="item">Choice 3</div>
                <div class="item">Choice 4</div>
                <div class="item">Choice 5</div>
                <div class="item">Choice 6</div>
                <div class="item">Choice 7</div>
                <div class="item">Choice 8</div>
                <div class="item">Choice 9</div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>

    <div class="no dropdown search example">
      <h4 class="ui header">Dropdown Search dividers/headers</h4>
      <p>A searchable dropdown menu can contain dividers and/or headers to separate related content. Using <code>hideDividers</code> lets you control how the elements are handled while filtering items.</p>
      <div class="code" data-demo="false">
        $('.dropdown')
          .dropdown({
            hideDividers: option
          })
        ;
      </div>

      <div class="ui stackable three column grid">
        <div class="column">
          <div class="ui sub header">false</div>
          <div class="ui labeled icon pointing dropdown button">
            <i class="filter icon"></i>
            <span class="text">Filter Posts</span>
            <div class="menu">
              <div class="ui search icon input">
                <i class="search icon"></i>
                <input name="search" placeholder="Search issues..." type="text">
              </div>
              <div class="divider"></div>
              <div class="header">
                <i class="tags icon"></i>
                Filter by tag
              </div>
              <div class="item">
                <div class="ui red empty circular label"></div>
                Important
              </div>
              <div class="item">
                <div class="ui blue empty circular label"></div>
                Announcement
              </div>
              <div class="item">
                <div class="ui black empty circular label"></div>
                Discussion
              </div>
              <div class="divider"></div>
              <div class="header">
                <i class="calendar icon"></i>
                Filter by date
              </div>
              <div class="item">
                <i class="olive circle icon"></i>
                This Week
              </div>
              <div class="item">
                <i class="violet circle icon"></i>
                This Month
              </div>
              <div class="item">
                <i class="orange circle icon"></i>
                This Year
              </div>
            </div>
          </div>
        </div>

        <div class="column">
          <div class="ui sub header">true</div>
          <div class="ui labeled icon pointing dropdown button">
            <i class="filter icon"></i>
            <span class="text">Filter Posts</span>
            <div class="menu">
              <div class="ui search icon input">
                <i class="search icon"></i>
                <input name="search" placeholder="Search issues..." type="text">
              </div>
              <div class="divider"></div>
              <div class="header">
                <i class="tags icon"></i>
                Filter by tag
              </div>
              <div class="item">
                <div class="ui red empty circular label"></div>
                Important
              </div>
              <div class="item">
                <div class="ui blue empty circular label"></div>
                Announcement
              </div>
              <div class="item">
                <div class="ui black empty circular label"></div>
                Discussion
              </div>
              <div class="divider"></div>
              <div class="header">
                <i class="calendar icon"></i>
                Filter by date
              </div>
              <div class="item">
                <i class="olive circle icon"></i>
                This Week
              </div>
              <div class="item">
                <i class="violet circle icon"></i>
                This Month
              </div>
              <div class="item">
                <i class="orange circle icon"></i>
                This Year
              </div>
            </div>
          </div>
        </div>

        <div class="column">
          <div class="ui sub header">'empty'</div>
          <div class="ui labeled icon pointing dropdown button">
            <i class="filter icon"></i>
            <span class="text">Filter Posts</span>
            <div class="menu">
              <div class="ui search icon input">
                <i class="search icon"></i>
                <input name="search" placeholder="Search issues..." type="text">
              </div>
              <div class="divider"></div>
              <div class="header">
                <i class="tags icon"></i>
                Filter by tag
              </div>
              <div class="item">
                <div class="ui red empty circular label"></div>
                Important
              </div>
              <div class="item">
                <div class="ui blue empty circular label"></div>
                Announcement
              </div>
              <div class="item">
                <div class="ui black empty circular label"></div>
                Discussion
              </div>
              <div class="divider"></div>
              <div class="header">
                <i class="calendar icon"></i>
                Filter by date
              </div>
              <div class="item">
                <i class="olive circle icon"></i>
                This Week
              </div>
              <div class="item">
                <i class="violet circle icon"></i>
                This Month
              </div>
              <div class="item">
                <i class="orange circle icon"></i>
                This Year
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>

    <div class="no dropdown search example">
      <h4 class="ui header">Clearable selection Dropdown</h4>
      <p>Adding the <code>clearable</code> class to a single selection dropdown now allow you to clear a previous selected value.</p>
      <div class="ui clearable selection dropdown">
        <input type="hidden" name="language" value="English">
        <i class="dropdown icon"></i>
        <div class="default text">Select Language</div>
        <div class="menu">
          <div class="item">Arabic</div>
          <div class="item">Chinese</div>
          <div class="item">Danish</div>
          <div class="item">Dutch</div>
          <div class="item">English</div>
          <div class="item">French</div>
          <div class="item">German</div>
          <div class="item">Greek</div>
          <div class="item">Hungarian</div>
          <div class="item">Italian</div>
          <div class="item">Japanese</div>
          <div class="item">Korean</div>
          <div class="item">Lithuanian</div>
          <div class="item">Persian</div>
          <div class="item">Polish</div>
          <div class="item">Portuguese</div>
          <div class="item">Russian</div>
          <div class="item">Spanish</div>
          <div class="item">Swedish</div>
          <div class="item">Turkish</div>
          <div class="item">Vietnamese</div>
        </div>
      </div>
    </div>

  </div>

  <div class="ui tab" data-tab="twothree">
    <h2 class="ui dividing header">A New Approach</h2>

    <p>After an extended period of patches, Semantic UI <code>2.3</code> marks the return to significant feature changes for the project.</p>
    <p>In upcoming Semantic releases we will be releasing more frequently, but with smaller changesets, to make it easier for users to upgrade and adjust to global changes.</p>

    <h2 class="ui dividing header">New Features</h2>
    <div class="no icon example">

      <h4 class="ui header">Font Awesome 5.0 &amp; Better Icon Searching</h4>
      <p>In <code>2.3</code> <a href="/elements/icon.html">icons</a> now include a full port of <a href="https://fontawesome.com/" target="_blank">Font Awesome</a> <code>5.0.6</code>, including 929 icons.</p>
      <p>Icon categories now match icon categories in Font Awesome's documentation, making it easier to find icons between docs.</p>
      <div class="ui doubling five column vertically padded grid">
        <div class="column"><i class="smile icon"></i>Smile</div>
        <div class="column"><i class="smile outline icon"></i>Smile Outline</div>
        <div class="column"><i class="hand rock icon"></i>Hand Rock </div>
        <div class="column"><i class="hand paper icon"></i>Hand Paper </div>
        <div class="column"><i class="hand scissors icon"></i>Hand Scissors</div>
      </div>
      <p>Semantic UI <a href="/elements/icon.html">icon docs</a> now includes a global icon search with easy copy and paste access to html</p>
    </div>


    <div class="no modal example">
      <h4 class="ui header">Flexbox Modals and Dimmers</h4>

      <p>Semantic UI <code>2.3</code> includes a rewrite of modal to include non-js flexbox positioning for vertical centering. No longer will you have to call <code>$('.ui.modal').modal('refresh')</code> if content height changes to recenter.</p>

      <p>In addition there's a new setting <code>centered: false</code> which makes it easier to do top aligned modals when the internal may be dynamic and you dont want content to shift vertically.</p>


      <div class="ui special modal">
        <div class="header">
          Top Aligned Modal
        </div>
        <div class="content">
          <img class="ui wireframe image" src="/images/wireframe/paragraph.png">
          <div class="ui hidden divider"></div>
        </div>
        <div class="actions">
          <div class="ui button">
            Cancel
          </div>
          <div class="ui primary right labeled icon button">
            Submit
            <i class="checkmark icon"></i>
          </div>
        </div>
      </div>
      <a class="ui button" data-url="/images/large-pdf.pdf">
        Open Top Aligned Modal
      </a>
      <div class="evaluated code" data-type="javascript">
        $('.ui.special.modal')
          .modal({
            centered: false
          })
          .modal('attach events', '.modal.example .button')
        ;
      </div>
    </div>

    <div class="no modal example">
      <h4 class="ui header">New Transitions</h4>
      <p>
        <a href="/modules/transition.html">Transition</a> now includes <code>zoom</code> and <code>glow</code>. Glow is useful for highlighting elements on page,
      </p>
      <div class="code" data-demo="true">
        $('.autumn.leaf')
          .transition('zoom')
        ;
      </div>
      <div class="code" data-demo="true">
        $('.autumn.leaf')
          .transition('glow')
        ;
      </div>
      <img src="/images/leaves/7.png" class="ui autumn leaf medium image">
    </div>

    <div class="example">
      <h4 class="ui header">Global Font Weight Variables</h4>
      <p>Theming now uses two no global variables <code>@bold</code> and <code>@normal</code> making it easier to modify font weights in a more complex font stack</p>
      <div class="code" data-type="less" data-title="site.variables">
        /* Use some custom font weights */
        @bold: 600;
        @normal: 400;
      </div>

    </div>
    <div class="local-category example">
      <h4 class="ui header">Local Category Search</h4>
      <p>You can now use category search with the <code>source</code> option without having to add API callbacks</p>
      <div class="ui search">
        <div class="ui icon input">
          <input class="prompt" type="text" placeholder="Search countries...">
          <i class="search icon"></i>
        </div>
        <div class="results"></div>
      </div>
      <div class="evaluated code" data-type="javascript">
        var categoryContent = [
          { category: 'South America', title: 'Brazil' },
          { category: 'South America', title: 'Peru' },
          { category: 'North America', title: 'Canada' },
          { category: 'Asia', title: 'South Korea' },
          { category: 'Asia', title: 'Japan' },
          { category: 'Asia', title: 'China' },
          { category: 'Europe', title: 'Denmark' },
          { category: 'Europe', title: 'England' },
          { category: 'Europe', title: 'France' },
          { category: 'Europe', title: 'Germany' },
          { category: 'Africa', title: 'Ethiopia' },
          { category: 'Africa', title: 'Nigeria' },
          { category: 'Africa', title: 'Zimbabwe' },
        ];
        $('.local-category.example .ui.search')
          .search({
            type: 'category',
            source: categoryContent,
            searchFields: [
              'title',
              'category'
            ]
          })
        ;
      </div>
    </div>
    <div class="no centering example">
      <h4 class="ui header">Arrow Aligment on Small Popups</h4>
      <p>Semantic <a href="/modules/popup.html">popups</a> now detects when horizontally aligning the popup on it's arrow is more reasonable than matching edges with a popup.</p>
      <div class="ui info message">
        To use this feature be sure to specify <code>movePopup: false</code> in your settings
      </div>
      <img src="http://oi66.tinypic.com/2zr2ckk.jpg" class="ui image">

      <div class="ui divider"></div>
      <img src="/images/avatar/small/elliot.jpg" data-title="Elliot Fu" data-content="Elliot has been a member since July 2012" class="ui avatar image">
      <div class="evaluated code" data-type="javascript">
        $('.centering.example .avatar.image').popup();
      </div>
    </div>
    <div class="complex-popup no example">
      <h4 class="ui header">Popups Support Multiple Coordinate Systems</h4>
      <p>Popups now can correctly place elements with two different coordinate systems. These are typically caused by having a parent element with css properties <code>transform</code> or <code>position</code>.</p>
      <div id="one">
        <p>Button is in here</p>
        <div class="ui button">Button</div>
      </div>
      <div id="two">
        <p>Popup is in here</p>
        <div class="ui popup">
          <h4 class="ui header">
            Test
          </h4>
          <p>This popup now appears correct without having to move the popup to the same coordinate system by moving the DOM element.</p>
        </div>
      </div>
      <div class="code" data-type="html">
        <div id="one">
          <p>Button is in here</p>
          <div class="ui button">Button</div>
        </div>
        <div id="two">
          <p>Popup is in here</p>
          <div class="ui popup">
            <h4 class="ui header">
              Test
            </h4>
            <p>This popup now appears correct without having to move the popup to the same coordinate system by moving the DOM element.</p>
          </div>
        </div>
      </div>
      <div class="code" data-type="css">
        /* Activating element is inside #one with different positioning context */
        #one {
          display: block;
          position: relative;
          padding: 50px 100px;
          background-color: #F0F0F0;
        }
        /* Popup is inside two with position relative (creating another positioning context) */
        #two {
          display: block;
          background-color: #E2EAE4;
          position: relative;
          top: 10px;
          padding: 50px 8px;
        }
      </div>
      <div class="evaluated code" data-type="javascript">
        $('.complex-popup.example .ui.button')
          .popup({
            movePopup: false,
            popup: $('.complex-popup.example .popup')
          })
        ;
      </div>
    </div>

    <div class="no example">
      <h4 class="ui header">New Matching Options</h4>
      <p>In addition, search now includes three tiers of matched results, similar to the options available in dropdown. Fuzzy results now are turned off by the new default <code>fullTextSearch: 'exact'</code> </p>
      <div class="ui bulleted list">
        <div class="item">Query matches the start of field exactly</div>
        <div class="item">
          Query matches any part of field <div class="ui teal label">New</div>
        </div>
        <div class="item">Query "fuzzy" matches field</div>
      </div>
      <div class="ignored code" data-type="javascript">
        $('.ui.search')
          .search({
            fullTextSearch: 'exact' // only matches exact matches (no fuzzy matching)
          })
        ;
      </div>
    </div>

  </div>

  <div class="ui tab" data-tab="twotwo">
    <h2 class="ui dividing header">By The Numbers</h2>
    <p><code>2.2</code> represents nearly a half year of updates, many new features, and bug patches.</p>
    <div class="ui large bulleted list">
      <div class="item"><b>124</b> <a href="https://github.com/fomantic/Fomantic-UI/issues?q=is%3Aissue+milestone%3A2.1+is%3Aclosed" target="_blank">closed issues</a></div>
      <div class="item"><b>40</b> new features</div>
      <div class="item"><b>70</b> bug fixes</div>
    </div>

    <p>For the complete list of bugs, their accompanying issue threads and the fixes please consult the release notes</p>
    <a class="ui button" href="https://github.com/fomantic/Fomantic-UI/blob/master/RELEASE-NOTES.md#version-220---june-26-2016" target="_blank">Release Notes</a>

    <h2 class="ui dividing header">Project Changes</h2>

    <div class="no example">
      <h4 class="ui header">Critical Bug Fixes</h4>

      <p><code>2.2</code> brings many new bug fixes. For a complete list please check out our release notes. Here is a highlight of some critical bugs</p>

      <div class="ui styled bug accordion">
        <div class="title">
          <i class="dropdown icon"></i>
          View Critical Bug List
        </div>
        <div class="content">
          <div class="ui large relaxed bulleted list">
            <div class="item">
              <b>All UI</b> - Using <code>component('setting, {})</code> to add multiple settings as an object literal, for example <code>error: {}</code>, will now deep extend the existing object instead of replacing it.
            </div>
            <div class="item">
              <b>API</b> - <code>beforeSend</code> would not correctly cancel request when <code>return false;</code> is used in callback.
            </div>
            <div class="item">
              <b>API</b> - <code>cache: 'local'</code> would not return the localstorage cached results in some cases
            </div>
            <div class="item">
              <b>Divider</b> - Descenders like "g" are cut off in <code>horizontal divider</code>
            </div>
            <div class="item">
              <b>Dropdown</b> - <code>forceSelection</code> will now automatically select values with multi dropdowns. When using <code>userAdditions</code> setting it will now automatically tokenize the current entered value
            </div>
            <div class="item">
              <b>Dropdown</b> - <code>search selection</code> would not let you move back in an entered search string with left arrow
            </div>
            <div class="item">
              <b>Dropdown</b> - Fixed issue where value set using javascript DOM metadata would be cleared when a message or user addition triggered <code>refresh</code>
            </div>
            <div class="item">
              <b>Form Validation / Dropdown</b> - Using "enter" key in a <code>search dropdown</code> could cause a form to be submitted
            </div>
            <div class="item">
              <b>Form Validation</b> - Fix issue with some foreign email addresses with extended charsets causing email validation to fail
            </div>
            <div class="item">
              <b>Form Validation</b> - Revalidating a field <code>on: blur</code> could cause fields not yet interacted with to be validated
            </div>
            <div class="item">
              <b>Form</b> - Fixed issue with <code>(x) fields</code> and <code>equal width</code> fields where middle rows would be slightly smaller because they include both left and right padding in % width. (Edges only have one side padding). Field groups now use negative margins instead.
            </div>
            <div class="item">
              <b>Popup</b> - Fixed issue where clicking element inside popup removed from DOM (like clicking a multi select label) would cause popup to close
            </div>
            <div class="item">
              <b>Rail</b> - Fixed incorrect width for <code>close rail</code> and <code>very close rail</code> caused by variable addition with mixed units <code>px</code> + <code>em</code>
            </div>
            <div class="item">
              <b>Search</b> - Fixed bug where a previously XHR query could cause the next one to fail depending on the latency of the request.
            </div>
            <div class="item">
              <b>Search</b> - Fixed an issue where <code>onResult</code> returning <code>false</code> would not prevent the search menu from hiding. Clicking on an empty results message will also no longer close the search results.
            </div>
            <div class="item">
              <b>Sticky/Visibility</b> -  Added mutation observer to teardown element with <code>destroy</code> if removed from DOM context, fixing a possible memory leak
            </div>
            <div class="item">
              <b>Video</b> - Fixed issue with <code>.video('change')</code> behavior not properly changing video.
            </div>
          </div>
        </div>
      </div>
    </div>


    <h2 class="ui dividing header">New Features</h2>

    <div class="example">
      <h4 class="ui header">CSS-Only Tooltips</h4>
      <p>2.2 includes CSS only popups that work without JS initialization using the <code>data-tooltip</code> property on any element. CSS tooltips even support inversion and specified positioning.</p>
      <div class="ui icon button" data-tooltip="Add users to your feed" data-delay="500">
        <i class="add icon"></i>
      </div>
      <div class="ui icon button" data-tooltip="Add users to your feed" data-inverted>
        <i class="add icon"></i>
      </div>
      <div class="ui button" data-tooltip="Add users to your feed" data-position="top left">
        Top Left
      </div>
      <div class="ui button" data-tooltip="Add users to your feed" data-position="top center">
        Top Center
      </div>
      <div class="ui button" data-tooltip="Add users to your feed" data-position="top right">
        Top Right
      </div>
      <div class="ui divider"></div>
      <div class="ui button" data-tooltip="Add users to your feed" data-position="bottom left">
        Bottom Left
      </div>
      <div class="ui button" data-tooltip="Add users to your feed" data-position="bottom center">
        Bottom Center
      </div>
      <div class="ui button" data-tooltip="Add users to your feed" data-position="bottom right">
        Bottom Right
      </div>
      <div class="ui divider"></div>
      <div class="ui button" data-tooltip="Add users to your feed" data-position="right center">
        Right Center
      </div>
      <div class="ui button" data-tooltip="Add users to your feed" data-position="left center">
        Left Center
      </div>
    </div>
    <div class="another example">
      <div class="ui button" data-inverted data-tooltip="Add users to your feed" data-position="top left">
        Top Left
      </div>
      <div class="ui button" data-inverted data-tooltip="Add users to your feed" data-position="top center">
        Top Center
      </div>
      <div class="ui button" data-inverted data-tooltip="Add users to your feed" data-position="top right">
        Top Right
      </div>
      <div class="ui divider"></div>
      <div class="ui button" data-inverted data-tooltip="Add users to your feed" data-position="bottom left">
        Bottom Left
      </div>
      <div class="ui button" data-inverted data-tooltip="Add users to your feed" data-position="bottom center">
        Bottom Center
      </div>
      <div class="ui button" data-inverted data-tooltip="Add users to your feed" data-position="bottom right">
        Bottom Right
      </div>
      <div class="ui divider"></div>
      <div class="ui button" data-inverted data-tooltip="Add users to your feed" data-position="right center">
        Right Center
      </div>
      <div class="ui button" data-inverted data-tooltip="Add users to your feed" data-position="left center">
        Left Center
      </div>
    </div>
    <div class="icon example">
      <h4 class="ui header">New Icons</h4>
      <p>2.2 of Semantic UI includes the latest version of <a href="http://fontawesome.io/" target="_blank">Font Awesome</a> with 50+ new icons. For a complete breakdown of new icons please check <a href="http://fontawesome.io/whats-new/" target="_blank">Font Awesome's list</a>.</p>
      <div class="ui doubling five column grid">
        <div class="column"><i class="wheelchair icon"></i>Wheelchair</div>
        <div class="column"><i class="asl interpreting icon"></i>American Sign Language (ASL) Interpreting</div>
        <div class="column"><i class="assistive listening systems icon"></i>Assistive Listening Systems</div>
        <div class="column"><i class="audio description icon"></i>Audio Description</div>
        <div class="column"><i class="blind icon"></i>Blind</div>
        <div class="column"><i class="braille icon"></i>Braille</div>
        <div class="column"><i class="deafness icon"></i>Deafness</div>
        <div class="column"><i class="low vision icon"></i>Low Vision</div>
        <div class="column"><i class="sign language icon"></i>Sign Language</div>
        <div class="column"><i class="universal access icon"></i>Universal Access</div>
        <div class="column"><i class="volume control phone icon"></i>Volume Control Phone</div>
      </div>
      <div class="ui divider"></div>
      <a href="/elements/icon.html" class="ui primary button">View All Icons <i class="right chevron icon"></i></a>
    </div>
    <div class="rapid example">
      <h4 class="ui header">Rapid-Ready Progress</h4>
      <p>Progress bars in 2.2 have been recoded to handle rapid update events.</p>
      <p>Now developers can trigger updates at fast intervals without causing animations to stutter, or easing tweens to occur unnaturally.</p>
      <div class="code" data-type="html" data-preview="true">
        <div class="ui indicating progress" data-value="1" data-total="200" id="example5">
          <div class="bar">
            <div class="progress"></div>
          </div>
          <div class="label">Waiting for you to press button</div>
        </div>
      </div>
      <a class="ui button" data-url="/images/large-pdf.pdf">
        Rapidly Update
      </a>
      <div class="evaluated code" data-type="javascript">
        $('.rapid.example .ui.button')
          .on('click', function() {
            var
              $progress       = $('.rapid.example .ui.progress'),
              $button         = $(this),
              updateEvent
            ;
            clearInterval(window.fakeProgress)
            $progress.progress('reset');

            // updates every 10ms until complete
            window.fakeProgress = setInterval(function() {
              $progress.progress('increment');
              $button.text( $progress.progress('get value') );
              // stop incrementing when complete
              if($progress.progress('is complete')) {
                clearInterval(window.fakeProgress)
              }
            }, 10);
          })
        ;
        $('.rapid.example .ui.progress')
          .progress({
            duration : 200,
            total    : 200,
            text     : {
              active: '{value} of {total} done'
            }
          })
        ;
      </div>
    </div>
    <div class="memory example">
      <h4 class="ui header">Reduced Memory Leaks</h4>
      <p><a href="/modules/sticky.html">Sticky</a>, <a href="/behaviors/visibility.html">visibility</a>, <a href="/modules/popup.html">popup</a>, and <a href="modules/dropdown.html">dropdown</a>, modules that can attach events on initialization to <code>window</code> and <code>body</code>, for example to detect changes in window scroll, will now use <a href="https://github.com/fomantic/Fomantic-UI/blob/master/dist/components/visibility.js#L143" target="_blank">additional mutation observers</a> to determine if they are removed from the DOM and automatically fire their <code>destroy</code> behaviors.</p>
      <p>This can prevent memory leaks when the parent element of a component is removed without the element is propertly teared down by calling its <code>destroy</code> behavior.</p>
      <div class="ui primary button">Simulate Memory Leak</div>
      <div class="ui display segment">
        Not Active
      </div>
      <div class="wrapper">
        <div class="ui demo segment">
          This segment has visibility events attached to modify the button above to say "active" when it is on screen
        </div>
      </div>
      <div class="evaluated code">
        $('.memory.example .demo.segment')
          .visibility({
            onOnScreen: function() {
              // this will no longer fire even though element was removed indirectly
              $('.memory.example .display.segment').html('This is active');
            }
          })
        ;
        // button will remove parent of visibility element and callback will stop firing automatically
        $('.memory.example .ui.button')
          .on('click', function() {
            $('.memory.example .display.segment').html('De-activated');
            $('.memory.example .wrapper')
              .remove()
            ;
          })
        ;
      </div>
    </div>
    <div class="depends example">
      <h4 class="ui header">Dependent Form Validation</h4>
      <p>Form field validation can now specify a <a href="/behaviors/form.html#dependent-fields"><code>depends</code> property</a> which will only cause validation to occur only when another field, like a checkbox or input, is selected.</p>
      <form class="ui form segment">
        <div class="inline field">
          <div class="ui checkbox">
            <input type="checkbox" name="isDoctor" />
            <label>Are you a doctor?</label>
          </div>
        </div>
        <div class="field">
          <label>How long have you been a medical professional</label>
          <input type="text" name="yearsPracticed">
        </div>
        <div class="ui divider"></div>
        <div class="ui blue submit button">Submit</div>
        <div class="ui error message"></div>
      </form>
      <div class="evaluated code">
      $('.depends.example .ui.form')
        .form({
          onSuccess: function() {
            alert('No form problems');
            return false;
          },
          fields: {
            yearsPracticed: {
              identifier : 'yearsPracticed',
              depends    : 'isDoctor',
              rules      : [
                {
                  type   : 'empty',
                  prompt : 'Please enter the number of years you have been a doctor'
                }
              ]
            }
          }
        })
      ;
      </div>
    </div>
    <div class="faster example">
      <h4 class="ui header">Faster Dropdown Selection</h4>
      <p>We've updated dropdowns to make it simpler to breeze through forms with dropdowns, and provide more intuitive selection controls</p>
      <div class="ui large relaxed bulleted list">
        <div class="item">
          Multiple select dropdowns use a new algorithm for line breaks based on actual rendered pixels and not estimated length based on glyph width calculations, meaning more choices can squeeze on a line than before.
        </div>
        <div class="item">
          Dropdowns now change selections on keyboards without hitting "enter", this lets users quickly navigate between dropdown elements in a form without having to hit "enter" before "tab" after each field entry, saving an additional keystroke.
        </div>
        <div class="item">
          All dropdown menus now support letter keyboard shortcuts. Hitting "C" for instance will let you jump to "California" in a dropdown list, then hitting it again "Colorado", even without using a search selection dropdown.
        </div>
      </div>
      <div class="ui two column very relaxed divided grid">
        <div class="column">
          <select class="ui fluid dropdown">
            <%- @partial('examples/single/state-options') %>
          </select>
        </div>
        <div class="column">
          <select class="ui multiple search fluid dropdown" multiple>
            <%- @partial('examples/single/state-options') %>
          </select>
        </div>
      </div>
    </div>

    <div class="example">
      <h4 class="ui header">More Basic Buttons</h4>
      <p>We've added <code>primary</code>, <code>secondary</code>, <code>positive</code> and <code>negative</code> <a href="/elements/button.html#basic"><code>basic</code> buttons</a></p>
      <button class="ui primary basic button">Primary</button>
      <button class="ui secondary basic button">Secondary</button>
      <button class="ui positive basic button">Positive</button>
      <button class="ui negative basic button">Negative</button>
    </div>

    <div class="boundary example">
      <h4 class="ui header">Popup Boundaries and Scroll Context</h4>
      <p>Popups now include a new setting <code>boundary</code> that let you specify that a popup should not escape the boundary of another section. This can be useful in complex paned layouts</p>
      <p>Additionally popups can now specify a scroll context, to allow for scroll containers other than window to cause a clicked popup to hide on scroll.</p>
      <div class="evaluated code" data-type="javascript">
        $('.boundary.example .button')
          .popup({
            boundary: '.boundary.example .segment'
          })
        ;
      </div>

      <div class="ui segment">
        <div class="ui button" data-content="This popup is very long but wont escape the segment it is placed in">Hover Me</div>
        <p>Normally this popup would open in the default position <code>top center</code> but because this would escape the boundaries of the segment it will search other available positions until it can find one to place the popup while staying inside the segment</p>
      </div>
    </div>

    <h2 class="ui dividing header">New Settings</h2>

    <p>We've added many new settings to components to help provide more granular control for some use-cases.</p>

    <div class="example">
      <h4 class="ui header">Dropdowns</h4>
      <table class="ui definition table">
        <tbody>
          <tr>
            <td>selectOnKeydown</td>
            <td>Whether dropdown should change active selection on keyboard shortcuts, preventing the requirement of hitting <code>enter</code> to confirm selection before the user tabs out of the field. (This will save one extra keystroke)
            </td>
          <tr>
            <td>allowReselection</td>
            <td>Setting to <code>true</code> will allow <code>onChange</code> to be triggered even when reselecting the same option</td>
          </tr>
          <tr>
            <td>fullTextSearch</td>
            <td>Setting to true will allow search across any part of string, setting to <code>exact</code> will disable fuzzy matching for dropdowns.</td>
          </tr>
          <tr>
            <td>hideAdditions</td>
            <td>Setting to true will allow custom user additions without triggering a special dropdown message for "Add custom choice". This is now enabled by default</td>
          </tr>
          <tr>
            <td>minCharacters</td>
            <td>Minimum characters required to begin showing filtered results</td>
          </tr>
        </tbody>
      </table>
      <a class="ui button" href="/modules/dropdown.html#settings">Dropdown settings
        <i class="right chevron icon"></i>
      </a>
    </div>

    <div class="example">
      <h4 class="ui header">Popup</h4>
      <table class="ui definition table">
        <tbody>
          <tr>
            <td>boundary</td>
            <td>A selector, or DOM element that the popup should never escape when positioning itself
            </td>
          </tr>
          <tr>
            <td>scrollContext</td>
            <td>A selector or DOM element which should be used for determining if user has scrolled.</td>
          </tr>
          <tr>
            <td>observeChanges</td>
            <td>Whether popup should automatically watch for its own removal from page to avoid memory leaks.</td>
          </tr>
        </tbody>
      </table>
      <a class="ui button" href="/modules/popup.html#settings">Popup settings
        <i class="right chevron icon"></i>
      </a>
    </div>

    <div class="example">
      <h4 class="ui header">Search</h4>
      <table class="ui definition table">
        <tbody>
          <tr>
            <td>selectFirstResult</td>
            <td>Whether the first search result element should be selected after results appear.
            </td>
          </tr>
          <tr>
            <td>showNoResults</td>
            <td>Whether a message should appear when no search results are returned
            </td>
          </tr>
        </tbody>
      </table>
      <a class="ui button" href="/modules/search.html#settings">Search settings
        <i class="right chevron icon"></i>
      </a>
    </div>

    <div class="example">
      <h4 class="ui header">Rating</h4>
      <table class="ui definition table">
        <tbody>
          <tr>
            <td>fireOnInit</td>
            <td>Whether the rating component should fire callbacks on initialization.
            </td>
          </tr>
        </tbody>
      </table>
      <a class="ui button" href="/modules/rating.html#settings">Rating settings
        <i class="right chevron icon"></i>
      </a>
    </div>

    <div class="example">
      <h4 class="ui header">Visibility</h4>
      <table class="ui definition table">
        <tbody>
          <tr>
            <td>zIndex</td>
            <td>Allows you to specify the <code>z-index</code> used with <code>type: 'fixed'</code>
            </td>
          </tr>
          <tr>
            <td>onFixed</td>
            <td>A callback used with <code>type: 'fixed'</code> to occur when content is fixed to the page.
            </td>
          </tr>
          <tr>
            <td>onUnfixed</td>
            <td>A callback used with <code>type: 'fixed'</code> to occur when content is fixed to the page.
            </td>
          </tr>
          <tr>
            <td>onLoaded</td>
            <td>A callback used with <code>type: 'image'</code> to occur when content is loaded.
            </td>
          </tr>
          <tr>
            <td>onAllLoaded</td>
            <td>A callback used with <code>type: 'image'</code> to occur when all images initialized together are loaded.
            </td>
          </tr>
        </tbody>
      </table>
      <a class="ui button" href="/behaviors/visibility.html#settings">Visibility settings
        <i class="right chevron icon"></i>
      </a>
    </div>


    <div class="example">
      <h4 class="ui header">Tab</h4>
      <table class="ui definition table">
        <tbody>
          <tr>
            <td>cacheType</td>
            <td>When set to <code>html</code> will cache the tabs html after load, reloading with the exact same html. Setting to <code>response</code> will cache the serve response, allowing for load events to fire with same contents.
            </td>
          </tr>
          <tr>
            <td>deactivate</td>
            <td>When set to <code>siblings</code> deactivates only DOM elements that are siblings of the selected tab activator. <code>all</code> will deactivate all other elements initialized at the same time.
            </td>
          </tr>
        </tbody>
      </table>
      <a class="ui button" href="/modules/tab.html#settings">Tab settings
        <i class="right chevron icon"></i>
      </a>
    </div>

    <div class="example">
      <h4 class="ui header">Shape</h4>
      <table class="ui definition table">
        <tbody>
          <tr>
            <td>width</td>
            <td>When set to <code>next</code> will use the size of the next <code>side</code> during the shape's animation. When set to <code>initial</code> it will use the size of the shape at initialization. When set to a specifix pixel width, will force the size to that width.
            </td>
          </tr>
          <tr>
            <td>height</td>
            <td>When set to <code>next</code> will use the size of the next <code>side</code> during the shape's animation. When set to <code>initial</code> it will use the size of the shape at initialization. When set to a specifix pixel height, will force the size to that height.
            </td>
          </tr>
        </tbody>
      </table>
      <a class="ui button" href="/modules/shape.html#settings">Shape settings
        <i class="right chevron icon"></i>
      </a>
    </div>
  </div>
  <div class="ui tab" data-tab="twoone">
    <h2 class="ui dividing header">The Tally</h2>
    <p><code>2.1</code> sums up around two months of work, including many new features, and updates to help bulletproof existing UI.</p>
    <div class="ui large bulleted list">
      <div class="item"><b>72</b> <a href="https://github.com/fomantic/Fomantic-UI/issues?q=is%3Aissue+milestone%3A2.1+is%3Aclosed" target="_blank">closed issues</a></div>
      <div class="item"><b>70</b> bug fixes</div>
      <div class="item"><b>23</b> new UI updates</div>
      <div class="item"><b>14</b> feature enhancements</div>
    </div>

    <p>To see the complete list of updates <a href="https://github.com/fomantic/Fomantic-UI/blob/<%= @getBranch() %>/RELEASE-NOTES.md#version-210---sep-01-2015">review our release notes</a></p>

    <div class="example" data-class="labeled, left labeled">
      <h4 class="ui header">Labeled Buttons</h4>
      <p><a href="/elements/button.html#labeled">Labeled buttons</a> are a useful design pattern for displaying a tally alongside a button.</p>
      <p>Labeled buttons are compatible with any label type, but looks great alongside a <code>basic label</code>.</p>
      <div class="ui labeled button" tabindex="0">
        <div class="ui red button">
          <i class="heart icon"></i> Like
        </div>
        <a class="ui basic red label">
          2,048
        </a>
      </div>
      <div class="ui labeled button" tabindex="0">
        <div class="ui basic blue button">
          <i class="fork icon"></i> Forks
        </div>
        <a class="ui basic left pointing blue label">
          1,048
        </a>
      </div>
      <div class="ui labeled button" tabindex="0">
        <div class="ui basic violet button">
          <i class="hospital icon"></i> Hospitals
        </div>
        <a class="ui violet tag label">
          2,048
        </a>
      </div>
      <div class="ui divider"></div>
      <div class="ui labeled button" tabindex="0">
        <div class="ui yellow button">
          <i class="star icon"></i> Star
        </div>
        <a class="ui basic yellow left pointing label">
          1,048
        </a>
      </div>
      <div class="ui left labeled button" tabindex="0">
        <a class="ui basic right pointing label">
          2,048
        </a>
        <div class="ui button">
          <i class="heart icon"></i> Like
        </div>
      </div>
      <div class="ui left labeled button" tabindex="0">
        <a class="ui basic label">
          1,048
        </a>
        <div class="ui icon button">
          <i class="fork icon"></i>
        </div>
      </div>
    </div>

    <div class="example" data-class="basic">
      <h4 class="ui header">Basic Labels</h4>
      <p>We've added a new style <a href="/elements/label.html#basic"><code>basic label</code></a> that is less intrusive, and compatible with all other label variations, reducing their complexity.</p>
      <a class="ui basic label">Basic</a>
      <a class="ui pointing basic label">Pointing</a>
      <a class="ui basic image label">
        <img src="/images/avatar/small/elliot.jpg">
        Elliot
      <a class="ui pointing red basic label">Red Pointing</a>
      <a class="ui blue basic label">Blue</a>
      <div class="ui divider"></div>
      <div class="ui equal width stretched grid">
        <div class="column">
          <div class="ui segment">
            <a class="ui right pointing basic teal ribbon label">Pointing</a> Look over here
            <img class="ui wireframe image" src="/images/wireframe/paragraph.png">
          </div>
        </div>
        <div class="column">
          <div class="ui segment">
            <a class="ui teal top right attached basic label">So Complex</a>
            <a class="ui orange top left attached basic label">So Simple</a>
            <a class="ui violet bottom attached top pointing basic label">Much adjectives</a>
          </div>
        </div>
      </div>
    </div>

    <div class="example" data-class="basic">
      <h4 class="ui header">Multiple Input Labels</h4>
      <p><a href="/elements/input.html#labeled">Labeled input</a> now supports labels on both sides of content at the same time.</p>
      <div class="ui right labeled input">
        <div class="ui basic label">$</div>
        <input type="text" placeholder="Amount">
        <div class="ui basic label">.00</div>
      </div>
    </div>

    <div class="example">
      <h4 class="ui header">More Tabular Directions</h4>
      <p><a href="/collections/menu.html#tabular">Tabular menus</a> now support <code>right</code> and <code>bottom</code> positioning.</p>
      <div class="ui grid">
        <div class="twelve wide stretched column">
          <div class="ui segment">
            This is an stretched grid column. This segment will always match the tab height
          </div>
        </div>
        <div class="four wide column">
          <div class="ui vertical fluid right tabular menu">
            <a class="active item">
              Bio
            </a>
            <a class="item">
              Pics
            </a>
            <a class="item">
              Companies
            </a>
            <a class="item">
              Links
            </a>
          </div>
        </div>
      </div>
    </div>
    <div class="another example">
      <div class="ui top attached segment">
        <img class="ui wireframe image" src="/images/wireframe/paragraph.png">
      </div>
      <div class="ui three item bottom attached tabular menu">
        <a class="active item">
          Active Project
        </a>
        <a class="item">
          Project #2
        </a>
        <a class="item">
          Project #3
        </a>
      </div>
    </div>
    <div class="another example">
      <div class="ui grid">
        <div class="four wide column">
          <div class="ui vertical fluid tabular menu">
            <a class="active item">
              Bio
            </a>
            <a class="item">
              Pics
            </a>
            <a class="item">
              Companies
            </a>
            <a class="item">
              Links
            </a>
          </div>
        </div>
        <div class="twelve wide stretched column">
          <div class="ui segment">
            This is an stretched grid column. This segment will always match the tab height
          </div>
        </div>
      </div>
    </div>

    <div class="example" data-class="tablet reversed">
      <h4 class="ui header">Enhanced Vertical Dividers</h4>
      <p>Grids now support using multiple <a href="/elements/divider.html#vertical-divider">vertical dividers</a> per column, in any specified arrangement.</p>
      <div class="ui very relaxed vertically divided grid">
        <div class="row" style="position:relative;">
          <div class="six wide column">
            <img class="ui wireframe image" src="/images/wireframe/media-paragraph.png">
          </div>
          <div class="three wide column">
            <img class="ui wireframe image" src="/images/wireframe/image.png">
          </div>
          <div class="ui vertical divider">and</div>
          <div class="three wide column">
            <img class="ui wireframe image" src="/images/wireframe/image.png">
          </div>
          <div class="ui vertical divider">and</div>
          <div class="three wide column">
            <img class="ui wireframe image" src="/images/wireframe/image.png">
          </div>
        </div>
        <div class="row" style="position:relative;">
          <div class="three wide column">
            <img class="ui wireframe image" src="/images/wireframe/image.png">
          </div>
          <div class="ui vertical divider">not</div>
          <div class="three wide column">
            <img class="ui wireframe image" src="/images/wireframe/image.png">
          </div>
          <div class="ui vertical divider">nor</div>
          <div class="three wide column">
            <img class="ui wireframe image" src="/images/wireframe/image.png">
          </div>
          <div class="six wide column">
            <img class="ui wireframe image" src="/images/wireframe/media-paragraph.png">
          </div>
        </div>
      </div>
    </div>

    <div class="example" data-class="tablet reversed">
      <h4 class="ui header">Inverted Colored Menu</h4>
      <p><a href="/collections/menu.html#inverted">Inverted menus</a> now support individual <code>item</code> colors</p>

      <div class="ui three item labeled icon inverted menu">
        <a class="active red item">
          <i class="gamepad icon"></i>
          Games
        </a>
        <a class="pink item">
          <i class="video camera icon"></i>
          Channels
        </a>
        <a class="blue item">
          <i class="video play icon"></i>
          Videos
        </a>
      </div>
    </div>

    <div class="another example">
      <div class="ui vertical inverted menu">
        <a class="active teal item">
          Inbox
        </a>
        <a class="orange item">
          Spam
        </a>
        <a class="violet item">
          Updates
        </a>
        <div class="item">
          <div class="ui transparent inverted icon input">
            <input type="text" placeholder="Search mail...">
            <i class="search icon"></i>
          </div>
        </div>
      </div>
    </div>


    <div class="example" data-class="tablet reversed">
      <h4 class="ui header">Reversable Grid Columns</h4>
      <p>Grids now support <a href="/collections/grid.html#reversed">reversing their column flow</a> per-device. This can be useful when a column should appear on the opposite side of the screen on smaller screens.</p>
      <p>Reversing grids are also designed to be compatible with column-order specific variations like divided or celled</p>
      <div class="ui tablet reversed divided equal width grid">
        <div class="column">
          Computer First <br>
          Tablet Fourth
        </div>
        <div class="column">
          Computer Second <br>
          Tablet Third
        </div>
        <div class="column">
          Computer Third <br>
          Tablet Second
        </div>
        <div class="column">
          Computer Fourth <br>
          Tablet First
        </div>
      </div>
    </div>

    <div class="example">
      <h4 class="ui header">Stackable Cards</h4>
      <p>Cards have a <a href="/views/card.html#stackable"><code>stackable</code></a> variation so that they appear full width on mobile.</p>
      <div class="ui two stackable cards">
        <div class="ui card">
          <div class="content">
            <div class="right floated meta">14h</div>
            <img class="ui avatar image" src="/images/avatar/large/elliot.jpg"> Elliot
          </div>
          <div class="content">
            <span class="right floated">
              <i class="heart outline like icon"></i>
              17 likes
            </span>
            <i class="comment icon"></i>
            3 comments
          </div>
          <div class="extra content">
            <div class="ui large transparent left icon input">
              <i class="heart outline icon"></i>
              <input type="text" placeholder="Add Comment...">
            </div>
          </div>
        </div>
        <div class="ui card">
          <div class="content">
            <div class="right floated meta">14h</div>
            <img class="ui avatar image" src="/images/avatar/large/elliot.jpg"> Elliot
          </div>
          <div class="content">
            <span class="right floated">
              <i class="heart outline like icon"></i>
              17 likes
            </span>
            <i class="comment icon"></i>
            3 comments
          </div>
          <div class="extra content">
            <div class="ui large transparent left icon input">
              <i class="heart outline icon"></i>
              <input type="text" placeholder="Add Comment...">
            </div>
          </div>
        </div>
        <div class="ui card">
          <div class="content">
            <div class="right floated meta">14h</div>
            <img class="ui avatar image" src="/images/avatar/large/elliot.jpg"> Elliot
          </div>
          <div class="content">
            <span class="right floated">
              <i class="heart outline like icon"></i>
              17 likes
            </span>
            <i class="comment icon"></i>
            3 comments
          </div>
          <div class="extra content">
            <div class="ui large transparent left icon input">
              <i class="heart outline icon"></i>
              <input type="text" placeholder="Add Comment...">
            </div>
          </div>
        </div>
        <div class="ui card">
          <div class="content">
            <div class="right floated meta">14h</div>
            <img class="ui avatar image" src="/images/avatar/large/elliot.jpg"> Elliot
          </div>
          <div class="content">
            <span class="right floated">
              <i class="heart outline like icon"></i>
              17 likes
            </span>
            <i class="comment icon"></i>
            3 comments
          </div>
          <div class="extra content">
            <div class="ui large transparent left icon input">
              <i class="heart outline icon"></i>
              <input type="text" placeholder="Add Comment...">
            </div>
          </div>
        </div>
      </div>
    </div>

  <div class="example">
    <h4 class="ui header">
      Fixed Tables
    </h4>
    <p><a href="/collections/table.html#fixed">Tables</a> now include a variation for using <code>table-layout: fixed</code>, which does not adjust column widths based on size.</p>
    <p>This can help present data more cleanly with content that is uniformly formatted.</p>
    <p>Fixed tables also support content collapsing using <code>text-overflow: ellipsis</code> when used with <code>single line</code>.</p>
    <table class="ui fixed center aligned celled table">
      <thead>
        <th>Name</th>
        <th>Status</th>
        <th>Gender</th>
      </thead>
      <tbody>
        <tr>
          <td>John</td>
          <td>Approved</td>
          <td>Male</td>
        </tr>
        <tr>
          <td>Jamie</td>
          <td>Approved</td>
          <td>Male</td>
        </tr>
        <tr>
          <td>Jill</td>
          <td>Denied</td>
          <td>Female</td>
        </tr>
      </tbody>
    </table>
  </div>
  <div class="another example">
    <h4 class="ui header">
      Fixed Tables
    </h4>
    <table class="ui fixed single line celled table">
      <thead>
        <th>Name</th>
        <th>Status</th>
        <th>Description</th>
      </thead>
      <tbody>
        <tr>
          <td>John</td>
          <td>Approved</td>
          <td title="This is much too long to fit I'm sorry about that">This is much too long to fit I'm sorry about that</td>
        </tr>
        <tr>
          <td>Jamie</td>
          <td>Approved</td>
          <td>Shorter description</td>
        </tr>
        <tr>
          <td>Jill</td>
          <td>Denied</td>
          <td>Shorter description</td>
        </tr>
      </tbody>
    </table>
  </div>

    <h2 class="ui dividing header">New Behaviors</h2>

    <div class="mapping example">
      <h4 class="ui header">Fully Customizable JSON</h4>
      <p>In <code>2.1</code> all component that uses remote data will let you specify a <code>fields</code> array to modify expected JSON property names, saving you the trouble of specifying an <a href="/behaviors/api.html#response-callbacks"><code>onResponse</code></a> callback to modify the data structure.</p>
      <div class="ui ignored code">
      $('.ui.search')
        .search({
          apiSettings: {
            url: '//api.github.com/search/repositories?q={query}'
          },
          fields: {
            results : 'items',
            title   : 'name',
            url     : 'html_url'
          }
        })
      ;
      </div>
      <div class="ui search">
        <div class="ui left icon input">
          <input class="prompt" type="text" placeholder="Search GitHub">
          <i class="github icon"></i>
        </div>
      </div>
    </div>

    <div class="another fields example">
      <p>Fields can also be used with local search to simplify working with unusual search sources.</p>
      <div class="ui ignored code">
      $('.ui.search')
        .search({
          searchFields: ['pickle'],
          fields: {
            title   : 'mustard'
          },
          source: [
            {
              mustard: 'Title #1',
              pickle: 'thing'
            },
            {
              mustard: 'Title #2',
              pickle: 'another thing'
            },
            {
              mustard: 'Title #3',
              pickle: 'thing 100'
            }
          ]
        })
      ;
      </div>
      <div class="ui search">
        <div class="ui icon input">
          <input class="prompt" type="text" placeholder="Search...">
          <i class="search icon"></i>
        </div>
      </div>
    </div>

    <div class="no payment example">
      <h4 class="ui header">Credit Card Validation</h4>
      <p>We've added new validation rules for payment. These work with luhn and <a href="http://stackoverflow.com/questions/7863058/does-the-luhn-algorithm-work-for-all-mainstream-credit-cards-discover-visa-m?answertab=votes#tab-top">non-luhn card numbers</a>. If you only accept a certain set of credit cards you can specify that too.</p>
      <div class="ui info message">
        Try <code>4565340519181845</code> a test visa card number
      </div>
      <form class="ui form segment">
        <div class="field">
          <label>Credit Card</label>
          <input name="card" type="text" value="4444444444444444">
        </div>
        <div class="field">
          <label>Visa / Amex</label>
          <input name="exact-card" type="text" value="4444444444444444">
        </div>
        <div class="ui submit button">Submit</div>
      </form>
      <div class="evaluated code">
        $('.payment.example form')
          .form({
            on: 'blur',
            inline: true,
            fields: {
              card: {
                identifier  : 'card',
                rules: [
                  {
                    type   : 'creditCard',
                    prompt : 'Please enter a valid credit card'
                  }
                ]
              },
              exactCard: {
                identifier  : 'exact-card',
                rules: [
                  {
                    type   : 'creditCard[visa,amex]',
                    prompt : 'Please enter a visa or amex card'
                  }
                ]
              }
            }
          })
        ;
      </div>
    </div>
    <div class="cancel example">
      <h4 class="ui header">Cancellable Checkboxes</h4>
      <p><a href="/modules/checkbox.html">Checkboxes</a> now include four new callbacks <code>beforeChecked</code>, <code>beforeUnchecked</code>, <code>beforeDeterminate</code>, and <code>beforeIndeterminate</code>, returning <code>false</code> from these callbacks will cancel the action from occuring.</p>
      <div class="ui checkbox">
        <input type="checkbox" name="example" />
        <label>Maybe this will work</label>
      </div>
      <div class="evaluated code" data-type="javascript">
        $('.cancel.example .ui.checkbox')
          .checkbox({
            beforeChecked: function() {
              var
                luckyPerson = (Math.random() < 0.5)
              ;
              return luckyPerson;
            }
          })
        ;
      </div>
    </div>


    <h2 class="ui dividing header">Theme Updates</h2>

    <div class="form example" data-class="basic">
      <h4 class="ui header">Global Form Focus</h4>
      <p>Global variables have been added to modify form focus color across all components. The default theme now uses a light blue to signal selection.</p>
      <form class="ui form">
        <div class="two fields">
          <div class="field">
            <label>First Name</label>
            <input type="text" name="first-name" placeholder="First Name">
          </div>
          <div class="field">
            <label>Last Name</label>
            <input type="text" name="last-name" placeholder="Last Name">
          </div>
        </div>
        <div class="field">
          <label>Gender</label>
          <select class="ui dropdown">
            <option value="">Gender</option>
            <option value="1">Male</option>
            <option value="0">Female</option>
          </select>
        </div>
        <div class="field">
          <div class="ui checkbox">
            <input type="checkbox" />
            <label>I agree to the Terms and Conditions</label>
          </div>
        </div>
        <button class="ui button" type="submit">Submit</button>
      </form>
    </div>
    <div class="validation example">
      <h4 class="ui header">Updated Form Validation</h4>
      <p><a href="/behaviors/form.html">Form validation</a> now uses <code>basic label</code> for validation prompts.</p>
      <form class="ui form">
        <div class="field">
          <label>First Name</label>
          <input type="text" name="first-name" placeholder="First Name">
        </div>
        <div class="field">
          <label>Last Name</label>
          <input type="text" name="last-name" placeholder="Last Name">
        </div>
        <div class="inline field">
          <div class="ui checkbox">
            <input type="checkbox" name="terms" />
            <label>I agree to the Terms and Conditions</label>
          </div>
        </div>
        <button class="ui button" type="submit">Submit</button>
      </form>
    </div>

    <div class="spaced example" data-class="basic">
      <h4 class="ui header">Colored Basic Buttons</h4>
      <p><a href="/elements/button.html#basic">Basic colored buttons</a> now are colored without <code>hover</code>, making the style more similar to common usage on most sites.</p>
      <button class="ui red basic button">Red</button>
      <button class="ui orange basic button">Orange</button>
      <button class="ui yellow basic button">Yellow</button>
      <button class="ui olive basic button">Olive</button>
      <button class="ui green basic button">Green</button>
      <button class="ui teal basic button">Teal</button>
      <button class="ui blue basic button">Blue</button>
      <button class="ui violet basic button">Violet</button>
      <button class="ui purple basic button">Purple</button>
      <button class="ui pink basic button">Pink</button>
      <button class="ui brown basic button">Brown</button>
      <button class="ui grey basic button">Grey</button>
      <button class="ui black basic button">Black</button>
    </div>

    <div class="example" data-class="labeled icon">
      <h4 class="ui header">Labeled Icon Menu</h4>
      <p>Horizontal <code>labeled icon menu</code> now use stacked icons to appear more in-tune with common icon menu usage.</p>
      <div class="ui three item labeled icon menu">
        <a class="active red item">
          <i class="gamepad icon"></i>
          Games
        </a>
        <a class="pink item">
          <i class="video camera icon"></i>
          Channels
        </a>
        <a class="blue item">
          <i class="video play icon"></i>
          Videos
        </a>
      </div>
    </div>

  </div>
</div>
