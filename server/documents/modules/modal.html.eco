---
layout      : 'default'
css         : 'modal-page'
standalone  : true

element     : 'modal'
elementType : 'module'

title       : 'Modal'
description : 'A modal displays content that temporarily blocks interactions with the main view of a site'
type        : 'UI Module'

themes      : ['Default', 'Material']
---

<link rel="stylesheet/less" type="text/css" href="/src/definitions/modules/modal.less" />
<script src="/javascript/modal.js"></script>

<%- @partial('header', { tabs: 'module' }) %>

<div class="main ui container">

  <div class="ui header-example modal">
    <div class="header">Header</div>
    <div class="content">
      Content
      <div class="ui button">Button</div>
    </div>
  </div>

  <div class="ui first coupled modal">
    <div class="header">
      Modal #1
    </div>
    <div class="image content">
      <div class="image">
        <i class="right arrow icon"></i>
      </div>
      <div class="description">
        <p>We have more to share with you. Follow us along to modal 2</p>
      </div>
    </div>
    <div class="actions">
      <div class="ui primary button">Proceed</div>
    </div>
  </div>
  <div class="ui small second coupled modal">
    <div class="header">
      Modal #2
    </div>
    <div class="content">
      <div class="description">
        <p>That's everything!</p>
      </div>
    </div>
    <div class="actions">
      <div class="ui approve button">
        <i class="checkmark icon"></i>
        All Done
      </div>
    </div>
  </div>

  <div class="ui small basic test modal">
    <div class="ui icon header">
      <i class="archive icon"></i>
      Archive Old Messages
    </div>
    <div class="content">
      <p>Your inbox is getting full, would you like us to enable automatic archiving of old messages?</p>
    </div>
    <div class="actions">
      <div class="ui red basic cancel inverted button">
        <i class="remove icon"></i>
        No
      </div>
      <div class="ui green ok inverted button">
        <i class="checkmark icon"></i>
        Yes
      </div>
    </div>
  </div>
  <div class="ui mini test modal">
    <div class="header">
      Delete Your Account
    </div>
    <div class="content">
      <p>Are you sure you want to delete your account</p>
    </div>
    <div class="actions">
      <div class="ui negative button">
        No
      </div>
      <div class="ui positive right labeled icon button">
        Yes
        <i class="checkmark icon"></i>
      </div>
    </div>
  </div>
  <div class="ui mini test inverted modal">
    <div class="header">
      Delete Your Account
    </div>
    <div class="content">
      <p>Are you sure you want to delete your account</p>
    </div>
    <div class="actions">
      <div class="ui inverted negative button">
        No
      </div>
      <div class="ui inverted positive right labeled icon button">
        Yes
        <i class="checkmark icon"></i>
      </div>
    </div>
  </div>

  <div class="ui special modal">
    <div class="header">
      Delete Your Account
    </div>
    <div class="content">
      <img class="ui wireframe image" src="/images/wireframe/paragraph.png">
      <div class="ui hidden divider"></div>
    </div>
    <div class="actions">
      <div class="ui negative button">
        No
      </div>
      <div class="ui positive right labeled icon button">
        Yes
        <i class="checkmark icon"></i>
      </div>
    </div>
  </div>

  <div class="ui bottom aligned modal">
    <div class="header">
        Delete Your Account
    </div>
    <div class="content">
        Are you sure ?
        <div class="ui hidden divider"></div>
    </div>
    <div class="actions">
        <div class="ui negative button">
            No
        </div>
        <div class="ui positive right labeled icon button">
            Yes
            <i class="checkmark icon"></i>
        </div>
    </div>
  </div>

  <div class="ui tiny test modal">
    <div class="header">
      Delete Your Account
    </div>
    <div class="content">
      <p>Are you sure you want to delete your account</p>
    </div>
    <div class="actions">
      <div class="ui negative button">
        No
      </div>
      <div class="ui positive right labeled icon button">
        Yes
        <i class="checkmark icon"></i>
      </div>
    </div>
  </div>

  <div class="ui small test modal">
    <div class="header">
      Delete Your Account
    </div>
    <div class="content">
      <p>Are you sure you want to delete your account</p>
    </div>
    <div class="actions">
      <div class="ui negative button">
        No
      </div>
      <div class="ui positive right labeled icon button">
        Yes
        <i class="checkmark icon"></i>
      </div>
    </div>
  </div>

  <div class="ui fullscreen modal">
    <i class="close icon"></i>
    <div class="header">
      Update Your Settings
    </div>
    <div class="content">
      <div class="ui form">
        <h4 class="ui dividing header">Give us your feedback</h4>
        <div class="field">
          <label>Feedback</label>
          <textarea></textarea>
        </div>
        <div class="field">
          <div class="ui checkbox">
            <input type="checkbox" checked="checked" name="contact-me">
            <label>It's okay to contact me.</label>
          </div>
        </div>
      </div>
    </div>
    <div class="actions">
      <button class="ui button">Cancel</button>
      <button class="ui green button">Send</button>
    </div>
  </div>

  <div class="ui overlay fullscreen modal">
    <div class="header">
        Welcome to the <span class="ui teal text">overlay fullscreen modal</span>
    </div>
    <div class="content">
        <div class="description">
            <div class="ui header">Even if there is not much content here...</div>
            ...the overlay fullscreen modal will occupy the entire screen
        </div>
    </div>
    <div class="actions">
        <div class="ui primary approve button">
            Proceed
            <i class="right chevron icon"></i>
        </div>
    </div>
  </div>

  <div class="ui large test modal">
    <div class="header">
      Changing Your Thing
    </div>
    <div class="content">
      <p>Do you want to change that thing to something else?</p>
    </div>
    <div class="actions">
      <div class="ui negative button">
        No
      </div>
      <div class="ui positive right labeled icon button">
        Yes
        <i class="checkmark icon"></i>
      </div>
    </div>
  </div>

  <div class="ui longer test modal">
    <div class="header">
      Profile Picture
    </div>
    <div class="scrolling image content">
      <div class="ui medium image">
        <img src="/images/wireframe/image.png">
      </div>
      <div class="description">
        <div class="ui header">Modal Header</div>
        <p>This is an example of expanded content that will cause the modal's content to scroll</p>
        <img class="ui wireframe image" src="/images/wireframe/paragraph.png">
        <div class="ui divider"></div>
        <img class="ui wireframe image" src="/images/wireframe/paragraph.png">
        <div class="ui divider"></div>
        <img class="ui wireframe image" src="/images/wireframe/paragraph.png">
        <div class="ui divider"></div>
        <img class="ui wireframe image" src="/images/wireframe/paragraph.png">
        <div class="ui divider"></div>
        <img class="ui wireframe image" src="/images/wireframe/paragraph.png">
        <div class="ui divider"></div>
        <img class="ui wireframe image" src="/images/wireframe/paragraph.png">
        <div class="ui divider"></div>
        <img class="ui wireframe image" src="/images/wireframe/paragraph.png">
      </div>
    </div>
    <div class="actions">
      <div class="ui primary approve button">
        Proceed
        <i class="right chevron icon"></i>
      </div>
    </div>
  </div>

  <div class="ui long test modal">
    <div class="header">
      Profile Picture
    </div>
    <div class="image content">
      <div class="ui medium image">
        <img src="/images/wireframe/image.png">
      </div>
      <div class="description">
        <div class="ui header">Modal Header</div>
        <p>This is an example of expanded content that will cause the modal's dimmer to scroll</p>
        <img class="ui wireframe image" src="/images/wireframe/paragraph.png">
        <div class="ui divider"></div>
        <img class="ui wireframe image" src="/images/wireframe/paragraph.png">
        <div class="ui divider"></div>
        <img class="ui wireframe image" src="/images/wireframe/paragraph.png">
        <div class="ui divider"></div>
        <img class="ui wireframe image" src="/images/wireframe/paragraph.png">
        <div class="ui divider"></div>
        <img class="ui wireframe image" src="/images/wireframe/paragraph.png">
        <div class="ui divider"></div>
        <img class="ui wireframe image" src="/images/wireframe/paragraph.png">
        <div class="ui divider"></div>
        <img class="ui wireframe image" src="/images/wireframe/paragraph.png">
        <div class="ui divider"></div>
        <img class="ui wireframe image" src="/images/wireframe/paragraph.png">
      </div>
    </div>
    <div class="actions">
      <div class="ui primary approve button">
        Proceed
        <i class="right chevron icon"></i>
      </div>
    </div>
  </div>

  <div class="ui modal" id="centerexample">
    <div class="center aligned header">Header is centered</div>
    <div class="center aligned content">
        <p>Content is centered</p>
    </div>
    <div class="center aligned actions">
        <button class="ui negative button">Cancel</button>
        <button class="ui positive button">OK</button>
    </div>
  </div>

  <div class="ui modal" id="leftactionsexample">
    <div class="header">Look at the Actions</div>
    <div class="content">
      <p>They are aligned to the left</p>
    </div>
    <div class="left actions">
        <button class="ui negative button">Cancel</button>
        <button class="ui positive button">OK</button>
    </div>
  </div>

   <div class="ui modal" id="basicheaderactionsexample">
     <div class="basic header">Basic Header</div>
     <div class="content">
         <p>Basic actions below</p>
     </div>
     <div class="basic actions">
         <button class="ui negative button">Cancel</button>
         <button class="ui positive button">OK</button>
     </div>
   </div>

  <div class="ui inverted test modal">
    <div class="header">
      Select a Photo
    </div>
    <div class="image content">
      <div class="ui medium image">
        <img src="/images/avatar2/large/rachel.png">
      </div>
      <div class="description">
        <div class="ui header">Default Profile Image</div>
        <p>We've found the following <a href="https://www.gravatar.com" target="_blank">gravatar</a> image associated with your e-mail address.</p>
        <p>Is it okay to use this photo?</p>
      </div>
    </div>
    <div class="actions">
      <button class="ui black deny button">
        Nope
      </button>
      <button class="ui positive right labeled icon button">
        Yep, that's me
        <i class="checkmark icon"></i>
      </button>
    </div>
  </div>
  <div class="ui standard test modal">
    <div class="header">
      Select a Photo
    </div>
    <div class="image content">
      <div class="ui medium image">
        <img src="/images/avatar2/large/rachel.png">
      </div>
      <div class="description">
        <div class="ui header">Default Profile Image</div>
        <p>We've found the following <a href="https://www.gravatar.com" target="_blank">gravatar</a> image associated with your e-mail address.</p>
        <p>Is it okay to use this photo?</p>
      </div>
    </div>
    <div class="actions">
      <button class="ui black deny button">
        Nope
      </button>
      <button class="ui positive right labeled icon button">
        Yep, that's me
        <i class="checkmark icon"></i>
      </button>
    </div>
  </div>
  <div class="ui reuse modal" id="reusemodal">
    <div class="header"></div>
    <div class="content"></div>
    <div class="actions">
      <button class="ui green approve button">Redeem now</button>
      <button class="ui red deny button">Not now</button>
    </div>
  </div>

  <div class="ui active tab" data-tab="definition">

    <h2 class="ui dividing header">Types</h2>

    <div class="example">
      <h4 class="ui header">Modal</h4>
      <p>A standard modal</p>
      <div class="code" data-demo="true" data-eval="$('.standard.test.modal').modal('show');">
      $('.ui.modal')
        .modal('show')
      ;
      </div>
      <div class="existing code" data-type="html">
        <div class="ui modal">
          <i class="close icon"></i>
          <div class="header">
            Profile Picture
          </div>
          <div class="image content">
            <div class="ui medium image">
              <img src="/images/avatar/large/chris.jpg">
            </div>
            <div class="description">
              <div class="ui header">We've auto-chosen a profile image for you.</div>
              <p>We've grabbed the following image from the <a href="https://www.gravatar.com" target="_blank">gravatar</a> image associated with your registered e-mail address.</p>
              <p>Is it okay to use this photo?</p>
            </div>
          </div>
          <div class="actions">
            <button class="ui black deny button">
              Nope
            </button>
            <button class="ui positive right labeled icon button">
              Yep, that's me
              <i class="checkmark icon"></i>
            </button>
          </div>
        </div>
      </div>
    </div>

    <div class="example">
      <h4 class="ui header">Basic</h4>
      <p>A modal can reduce its complexity</p>
      <div class="code" data-demo="true" data-eval="$('.basic.test.modal').modal('show');">
      $('.ui.basic.modal')
        .modal('show')
      ;
      </div>
      <div class="existing code">
        <div class="ui basic modal">
          <div class="ui icon header">
            <i class="archive icon"></i>
            Archive Old Messages
          </div>
          <div class="content">
            <p>Your inbox is getting full, would you like us to enable automatic archiving of old messages?</p>
          </div>
          <div class="actions">
            <div class="ui red basic cancel inverted button">
              <i class="remove icon"></i>
              No
            </div>
            <div class="ui green ok inverted button">
              <i class="checkmark icon"></i>
              Yes
            </div>
          </div>
        </div>
      </div>
    </div>

    <h2 class="ui dividing header">Content</h2>

    <div class="no example" data-use-content="true">
      <h4 class="ui header">
        Header
      </h4>
      <p>A modal can have a header</p>
      <div class="code" data-type="html">
        <div class="ui modal">
          <div class="header">Header</div>
        </div>
      </div>
    </div>

    <div class="no example">
      <h4 class="ui header">
        Content
      </h4>
      <p>A modal can contain content</p>
      <div class="code" data-type="html">
        <div class="ui modal">
          <div class="header">Header</div>
          <div class="content">
            <p></p>
            <p></p>
            <p></p>
          </div>
        </div>
      </div>
    </div>

    <div class="no example" data-since="2.0" data-use-content="true">
      <h4 class="ui header">
        Image Content
      </h4>
      <p>A modal can contain image content</p>
      <div class="ui ignored info message">
        Modals with image content must use the <code>image content</code> class in <code>2.0</code>. This is to make sure flex-box rules do not affect regular content.
      </div>
      <div class="code" data-type="html">
        <div class="ui modal">
          <div class="header">Header</div>
          <div class="image content">
            <img class="image">
            <div class="description">
              <p></p>
            </div>
          </div>
        </div>
      </div>
    </div>

    <div class="no example" data-use-content="true">
      <h4 class="ui header">
        Actions
      </h4>
      <p>A modal can contain a row of actions</p>
      <div class="ui ignored info message">
        <p>Close actions are applied by default to all button actions matching the <code>approve</code>, <code>deny</code> or <code>close</code> selector. In addition an <code>onApprove</code> or <code>onDeny</code> callback will only fire if the elements match the <code>approve</code> or <code>deny</code> selector.</p>
        <div class="code" data-type="javascript">
          close    : '> .close',
          approve  : '.positive, .approve, .ok',
          deny     : '.negative, .deny, .cancel'
        </div>
      </div>
      <div class="ui ignored warning message">
        <p>To prevent a modal action from causing the modal to close, you can <code>return false;</code> from either callback.</p>
      </div>
      <div class="code" data-type="html">
        <div class="ui modal">
          <div class="header">Header</div>
          <div class="content">
            <p></p>
          </div>
          <div class="actions">
            <div class="ui approve button">Approve</div>
            <div class="ui button">Neutral</div>
            <div class="ui cancel button">Cancel</div>
          </div>
        </div>
      </div>
    </div>

    <h2 class="ui dividing header">Variations</h2>

    <div class="no example" data-class="fullscreen">
      <h4 class="ui header">Full Screen</h4>
      <p>A modal can use the entire size of the screen</p>
      <div class="code" data-demo="true" data-eval="$('.fullscreen.modal').not('.overlay').modal('show')">
      $('.fullscreen.modal')
        .modal('show')
      ;
      </div>
    </div>
    <div class="no example" data-since="2.7.3" data-class="!overlay fullscreen">
      <h4 class="ui header">Overlay Full Screen</h4>
      <p>A modal can overlay the entire screen</p>
      <div class="ui ignored info message">
          Overlay fullscreen modals cannot be closed by clicking into the dimmer, because the dimmer is completely overlayed and not visible anymore).
          Make sure your modal is closable by either adding a close icon or an action button to close it.
      </div>
      <div class="code" data-demo="true">
      $('.overlay.fullscreen.modal')
      .modal('show')
      ;
      </div>
    </div>

    <div class="no example">
      <h4 class="ui header">Size</h4>
      <p>A modal can vary in size</p>
      <div class="code" data-demo="true" data-eval="$('.mini.test.modal').not('.inverted').not('.basic').modal('show')">
      $('.mini.modal')
        .modal('show')
      ;
      </div>
      <div class="code" data-demo="true" data-eval="$('.tiny.test.modal').not('.basic').modal('show')">
      $('.tiny.modal')
        .modal('show')
      ;
      </div>
      <div class="code" data-demo="true" data-eval="$('.small.test.modal').not('.basic').modal('show')">
      $('.small.modal')
        .modal('show')
      ;
      </div>
      <div class="code" data-demo="true" data-eval="$('.large.test.modal').modal('show')">
      $('.large.modal')
        .modal('show')
      ;
      </div>
    </div>

    <div class="no example">
      <h4 class="ui header">Inverted</h4>
      <p>A modal can be shown inverted on white dimmer...</p>
      <div class="code" data-demo="true" data-eval="$('.mini.test.inverted.modal').not('.basic').modal({inverted:true}).modal('show')">
      $('.mini.inverted.modal')
        .modal({
           inverted: true
        })
        .modal('show')
      ;
      </div>
        <p>... or default black dimmer</p>
      <div class="code" data-demo="true" data-eval="$('.mini.test.inverted.modal').not('.basic').modal({inverted: false}).modal('show')">
      $('.mini.inverted.modal')
        .modal('show')
      ;
      </div>
    </div>

    <div class="no example" data-since="2.2.11" data-use-content="true">
      <h4 class="ui header">
        Scrolling Content
      </h4>
      <p>A modal can have a scrolling content</p>
      <div class="ui ignored message" data-since="2.9.3">You can also use <code>resizable scrolling content</code> and a native resize drag handler will appear to the bottom right of the content. This needs a <a href="https://caniuse.com/?search=resize" target="_blank">modern browser</a>, so does not work in IE11 or legacy Edge.</div>
      <div class="code" data-type="html" data-variation="scrolling">
        <div class="ui modal">
          <div class="header">Header</div>
          <div class="scrolling content">
            <p>Very long content goes here</p>
          </div>
        </div>
      </div>
      <div class="code" data-demo="true">
      $('.ui.longer.modal')
        .modal('show')
      ;
      </div>
    </div>

    <div class="no example" data-since="2.8.8" data-use-content="true">
      <h4 class="ui header">
          Center Aligned
      </h4>
      <p>You can center align the header, the content or even actions individually</p>
      <div class="code" data-type="html">
          <div class="ui modal">
              <div class="center aligned header">Header is centered</div>
              <div class="center aligned content">
                  <p>Content is centered</p>
              </div>
              <div class="center aligned actions">
                  <div class="ui negative button">Cancel</div>
                  <div class="ui positive button">OK</div>
              </div>
          </div>
      </div>
      <div class="code" data-demo="true">
          $('#centerexample')
          .modal('show')
          ;
      </div>
    </div>

    <div class="no example" data-since="2.9.0" data-use-content="true">
      <h4 class="ui header">
          Left Actions
      </h4>
      <p>You can also place the action buttons to the left</p>
      <div class="code" data-type="html">
          <div class="ui modal">
            <div class="header">Look at the Actions</div>
            <div class="content">
              <p>They are aligned to the left</p>
            </div>
              <div class="left actions">
                  <div class="ui negative button">Cancel</div>
                  <div class="ui positive button">OK</div>
              </div>
          </div>
      </div>
      <div class="code" data-demo="true">
          $('#leftactionsexample')
          .modal('show')
          ;
      </div>
    </div>

    <div class="no example" data-since="2.9.0" data-class="basic" data-use-content="true">
      <h4 class="ui header">
          Basic Header and Actions
      </h4>
      <p>Header and/or Actions can also appear on the same basic background as the content</p>
      <div class="code" data-type="html">
          <div class="ui modal">
              <div class="basic header">Basic Header</div>
              <div class="content">
                <p>Basic Actions below</p>
              </div>
              <div class="basic actions">
                  <div class="ui negative button">Cancel</div>
                  <div class="ui positive button">OK</div>
              </div>
          </div>
      </div>
      <div class="code" data-demo="true">
          $('#basicheaderactionsexample')
          .modal('show')
          ;
      </div>
    </div>

    <h2 class="ui dividing header">States</h2>

    <div class="no example">
      <h4 class="ui header">Active</h4>
      <p>An active modal is visible on the page</p>
      <div class="visible code" data-type="html">
        <div class="ui active modal"></div>
      </div>
    </div>
  </div>

  <div class="ui tab" data-tab="examples">

    <h2 class="ui dividing header">Examples</h2>

    <div class="no example" data-since="2.3">
      <h4 class="ui header">
        Disabling Vertical Centering
      </h4>
      <p>When your modal has dynamic content, or multiple steps, it can make sense to disable centering so content doesn't jump around vertically when its height changes.</p>
      <div class="code" data-demo="true">
      $('.special.modal')
        .modal({
          centered: false
        })
        .modal('show')
      ;
      </div>
    </div>

    <div class="no example" data-since="2.7.3" data-class="!top aligned">
      <h4 class="ui header">
          Top or Bottom aligned
      </h4>
      <p>If you leave the <code>centered</code> option to the default <code>true</code>, you can also force positioning of the modal by adding additional classes <code>top aligned</code> (which equals to the usage of <code>centered:false</code>) or <code>bottom aligned</code> to the modal itself</p>
      <div class="ui ignored info message">
          If <code>bottom aligned</code> is used, you have to make sure that the modal content fits to the screen or uses <code>scrolling content</code>, because scrolling of the whole screen will not be supported to keep the modal to the bottom
      </div>
      <div class="code" data-demo="true">
          $('.bottom.aligned.modal')
          .modal('show')
          ;
      </div>
    </div>

    <div class="no example">
      <h4 class="ui header">Scrolling Modal</h4>
      <p>When your modal content exceeds the height of the browser the scrollable area will automatically expand to include just enough space for scrolling, without scrolling the page below.</p>
      <div class="code" data-demo="true">
      $('.long.modal')
        .modal('show')
      ;
      </div>
    </div>

    <div class="no example">
      <h4 class="ui header">Internally Scrolling Content</h4>
      <p>You may prefer to have the content of your modal scroll itself, you can do this by using the <code>scrolling content</code> variation.</p>
      <div class="ui ignored message" data-since="2.9.3">You can also use <code>resizable scrolling content</code> and a native resize drag handler will appear to the bottom right of the content. This needs a <a href="https://caniuse.com/?search=resize" target="_blank">modern browser</a>, so does not work in IE11 or legacy Edge.</div>
      <div class="code" data-demo="true">
      $('.longer.modal')
        .modal('show')
      ;
      </div>
    </div>

    <div class="no example">
      <h4 class="ui header">Multiple Modals</h4>
      <p>A modal can open a second modal. If you use <code>allowMultiple: true</code> parameter the second modal will  be opened on top of the first modal. Otherwise the modal will be closed before the second modal is opened.</p>
      <div class="code" data-demo="true">
      // initialize all modals
      $('.coupled.modal')
        .modal({
          allowMultiple: true
        })
      ;
      // open second modal on first modal buttons
      $('.second.modal')
        .modal('attach events', '.first.modal .button')
      ;
      // show first immediately
      $('.first.modal')
        .modal('show')
      ;
      </div>
      <div class="code" data-demo="true">
      $('.coupled.modal')
        .modal({
          allowMultiple: false
        })
      ;
      // attach events to buttons
      $('.second.modal')
        .modal('attach events', '.first.modal .button')
      ;
      // show first now
      $('.first.modal')
        .modal('show')
      ;
      </div>
    </div>

    <div class="no example">
      <h4 class="ui header">Forcing a Choice</h4>
      <p>You can disable a modal's dimmer from being closed by click to force a user to make a choice</p>
      <div class="code" data-demo="true">
      $('.basic.test.modal')
        .modal('setting', 'closable', false)
        .modal('show')
      ;
      </div>
    </div>

    <div class="no example">
      <h4 class="ui header">Approve / Deny Callbacks</h4>
      <p>Modals will automatically tie approve deny callbacks to any positive/approve, negative/deny or ok/cancel buttons.
      <div class="ui ignored info message">
        If <code>onDeny</code>, <code>onApprove</code> or <code>onHide</code> returns false it will prevent the modal from closing
      </div>
      <div class="code" data-demo="true">
      $('.ui.basic.test.modal')
        .modal({
          closable  : false,
          onDeny    : function(){
            window.alert('Wait not yet!');
            return false;
          },
          onApprove : function() {
            window.alert('Approved!');
          }
        })
        .modal('show')
      ;
      </div>
    </div>

    <div class="no example">
      <h4 class="ui header">Attach events</h4>
      <p>A modal can attach events to another element</p>
      <div class="code" data-demo="true">
      $('.test.modal')
        .modal('attach events', '.test.button', 'show')
      ;
      </div>
      <div class="ui primary test button">Launch modal</div>
    </div>

    <div class="no example">
      <h4 class="ui header">Transitions</h4>
      <p>A modal can use any named ui transition.</p>
      <div class="ui animation selection dropdown">
        <input type="hidden" name="transition">
        <div class="default text">Choose transition</div>
        <i class="dropdown icon"></i>
        <div class="menu">
          <div class="item">Horizontal Flip</div>
          <div class="item">Vertical Flip</div>
          <div class="item">Fade Up</div>
          <div class="item">Fade</div>
          <div class="item">Scale</div>
        </div>
      </div>
      <div class="ui clearing divider"></div>
      <div class="code" data-type="javascript">
      $('.selection.dropdown')
        .dropdown({
          onChange: function(value) {
            $('.test.modal')
              .modal('setting', 'transition', value)
              .modal('show')
            ;
          }
        })
      ;
      </div>
    </div>

    <div class="no example">
      <h4 class="ui header">Dimmer Variations</h4>
      <p>Modals can specify additional variations like <code>blurring</code> or <code>inverted</code> which adjust how the dimmer displays.</p>
      <div class="ui ignored info message">Full screen blurring modals are not performant for current-gen computers at widescreen resolutions with integrated graphics.</div>
      <div class="code" data-demo="true" data-eval="$('.ui.inverted.modal').not('.mini').modal({inverted: true}).modal('show')">
      $('.ui.modal')
        .modal({
          inverted: true
        })
        .modal('show')
      ;
      </div>
      <div class="code" data-demo="true" data-eval="$('.ui.standard.modal').modal({inverted: false, blurring: true}).modal('show')">
      $('.ui.modal')
        .modal({
          blurring: true
        })
        .modal('show')
      ;
      </div>
    </div>

  </div>

  <div class="ui tab" data-tab="usage">

    <h2 class="ui dividing header">Initializing a modal</h2>

    <div class="no example" data-since="2.8.8">
      <h4 class="ui header">Via Javascript properties</h4>
      <p>You can create temporary modals without the need to create markup on your own. Temporary modals will be removed from the DOM once closed by default if there isn't a custom <code>onHidden</code> callback given.</p>
      <div class="ui ignored info message">jQuery short notation <code>$.modal()</code> support was added in 2.9.0. If you want this for older FUI versions add
          <code>
          $.modal = $.fn.modal;
          </code><br>
          The old selector notation <code>$('body').modal()</code> still works as before.
      </div>
      <div class="code" data-demo="true">
      $.modal({
          title: 'Important Notice',
          class: 'mini',
          closeIcon: true,
          content: 'You will be logged out in 5 Minutes',
          actions: [{
            text: 'Alright, got it',
            class: 'green'
          }]
      }).modal('show');
      </div>
    </div>
    <div class="no example">
      <h4 class="ui header">Via existing DOM node</h4>

      <p>A modal can be included anywhere on the page. On initialization a modal's current size will be cached, and the element will be detached from the DOM and moved inside a dimmer.</p>
      <div class="ui info message">
        <div class="header">Why move modal content?</div>
        <p>Having a modal inside the page dimmer allows for 3D animations without having the 3D perspective settings alter the rest of the page content. Additionally, content outside the dimmer can be blurred or altered without affecting the modal's content.</p>
        <p>If you need to have your modal stay in its current location you can preserve its position using the setting <code>detachable: false</code></p>
      </div>
      <div class="code" data-type="javascript">
      $('.ui.modal')
        .modal()
      ;
      </div>
      <div class="code" data-type="html">
        <div class="ui modal">
          <i class="close icon"></i>
          <div class="header">
            Modal Title
          </div>
          <div class="image content">
            <div class="image">
              An image can appear on left or an icon
            </div>
            <div class="description">
              A description can appear on the right
            </div>
          </div>
          <div class="actions">
            <div class="ui button">Cancel</div>
            <div class="ui button">OK</div>
          </div>
        </div>
      </div>

      <div class="ui info message">
        Usually a given close icon on smaller modals will be displayed outside of the modal.
        You can force to display the close icon inside the modal, just like in fullscreen modals, by adding the <code>inside</code> class to the close icon.
      </div>
    </div>

    <div class="no example" data-since="2.8.8">
      <h4 class="ui header">Reuse existing modal with new content</h4>
      <p>You can prepare a modal markup as a general template and reuse it's general style but provide actual content via js properties.</p>
      <div class="code" data-demo="true">
        var now = new Date();now.setDate(now.getDate()+Math.floor(Math.random() * 31 + 1));
        $('#reusemodal').modal({
          title: 'Free voucher until '+now.toDateString(),
          content: 'Your voucher code is<br><span class="ui huge green text">'+Math.random().toString(16).substr(2).toUpperCase()+'</span>',
          classContent: 'centered',
          class: 'small'
        }).modal('show');
      </div>

      <div class="code" data-type="html">
        <div class="ui modal">
            <div class="header"></div>
            <div class="content"></div>
            <div class="actions">
                <button class="ui green approve button">Redeem now</button>
                <button class="ui red deny button">Not now</button>
            </div>
        </div>
      </div>
    </div>

    <h2 class="ui dividing header">Behavior</h2>

    <p>All the following behaviors can be called using the syntax:</p>
    <div class="code" data-type="javascript">
    $('.ui.modal')
      .modal('behavior name', argumentOne, argumentTwo)
    ;
    </div>

    <table class="ui definition celled sortable table segment">
      <thead>
        <tr>
          <th>Behavior</th>
          <th>Description</th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <td>show</td>
          <td>Shows the modal</td>
        </tr>
        <tr>
          <td>hide</td>
          <td>Hides the modal</td>
        </tr>
        <tr>
          <td>toggle</td>
          <td>Toggles the modal</td>
        </tr>
        <tr>
          <td>refresh</td>
          <td>Refreshes centering of modal on page</td>
        </tr>
        <tr>
          <td>show dimmer</td>
          <td>Shows associated page dimmer</td>
        </tr>
        <tr>
          <td>hide dimmer</td>
          <td>Hides associated page dimmer</td>
        </tr>
        <tr>
          <td>hide others</td>
          <td>Hides all modals not selected modal in a dimmer</td>
        </tr>
        <tr>
          <td>hide all</td>
          <td>Hides all visible modals in the same dimmer</td>
        </tr>
        <tr>
          <td>cache sizes</td>
          <td>Caches current modal size</td>
        </tr>
        <tr>
          <td>can fit</td>
          <td>Returns whether the modal can fit on the page</td>
        </tr>
        <tr>
          <td>is active</td>
          <td>Returns whether the modal is active</td>
        </tr>
        <tr>
          <td>set active</td>
          <td>Sets modal to active</td>
        </tr>
        <tr>
          <td>destroy</td>
          <td>Destroys instance and removes all events</td>
        </tr>
      </tbody>
    </table>

    <h2 data-since="2.8.8" class="ui dividing header">Config Templates</h2>
    <p>A config template is a special behavior to immediately show preconfigured temporary modals. Three basic templates are included: <code>alert</code>, <code>confirm</code>, <code>prompt</code> as equivalents to existing vanilla JS variants, but with more possibilities to customize the look & feel. </p>
    <div class="ui info message">
      Config template modals will be always autoshown, so no manual <code>show</code> is needed)
    </div>
    <div class="code" data-type="javascript">
      $.modal('alert','hello')
      $.modal('confirm','Are you sure?',function(value){})
      $.modal('prompt','Enter Code', function(value){})
    </div>
    <div class="no example">
      <h4 class="ui header">Alert</h4>
      <p>Possible parameters are: title, content, handler (in that order to stay nearly identical to vanilla js usage) or a given object <code>{title:'',content:'',handler:function(){}}</code> where as title and content can contain HTML.</p>
      <div class="ui warning message">If you don't trust the content set the global modal setting for <code>preserveHTML</code> to <code>false</code>.</div>
      <div class="code" data-demo="true">
          $.modal('alert','<span class="ui big purple text">hello</span>');
      </div>
      <div class="code" data-demo="true">
          $.modal('alert','Watch out','This is an important message!');
      </div>
      <div class="code" data-demo="true">
         $.modal('alert',{
            title: 'Listen to me',
            content: 'I love Fomantic-UI',
            handler: function() {
              $.toast({message:'Great!'});
            }
          });
      </div>
    </div>
    <div class="no example">
      <h4 class="ui header">Confirm</h4>
      <p>The parameter list and logic is the same as for alert. The selected boolean choice will be provided to a given callback handler.</p>
      <div class="code" data-demo="true">
      // title and content
        $.modal('confirm','Attention!','Ready?');
      </div>
      <div class="code" data-demo="true">
      // title, content and handler
        $.modal('confirm','Attention!','Ready?', function(choice){
          $.toast({message:'You '+ (choice ? 'Accepted':'Declined')});
        });
      </div>
      <div class="code" data-demo="true">
      // content and handler
        $.modal('confirm','Ready?', function(choice){
          $.toast({message:'You '+ (choice ? 'Accepted':'Declined')});
        });
      </div>
      <div class="code" data-demo="true">
      // title and handler
        $.modal('confirm',{
          title: 'Ready?',
          handler: function(choice){
            $.toast({message:'You '+ (choice ? 'Accepted':'Declined')});
          }
        });
      </div>
    </div>
    <div class="no example">
      <h4 class="ui header">Prompt</h4>
      <p>The call for prompt is basically identical to alert and confirm. There are 2 more options available when an object is given <code>placeholder</code> and <code>defaultValue</code>.
        If you provide HTML Code for the content and this contains an input, this will be used as the inputfield. Otherwise it creates one dynamically for you.</p>
      <div class="code" data-demo="true">
  // provide a placeholder
    $.modal('prompt',{
      title: 'Enter your name',
      placeholder: 'Do not enter your mothers name!',
      handler: function(name){
          $.toast({message: 'Your name is ' + (name || 'CANCELLED')});
      }
    });
      </div>
      <div class="code" data-demo="true">
  // set a defaultValue
    $.modal('prompt',{
      title: 'Enter your name',
      defaultValue: 'mommy',
      handler: function(name){
          $.toast({message: 'Your name is ' + (name || 'CANCELLED')});
      }
    });
      </div>
      <div class="code" data-demo="true">
  // custom input
    $.modal('prompt', 'Custom Input', '<div class="ui labeled input"><div class="ui blue label">Nickname</div><input type="text" placeholder="Do not use your email!"></div>', function(name) {
      $.toast({message: 'Your name is ' + (name || 'CANCELLED')});
    });
      </div>
    </div>
    <div class="no example">
      <h4 class="ui header">Create your own template</h4>
      <p>By extending the modals templates object once, you can define your own custom config templates. It has to return an object which will be merged into the modals settings prior to creating/showing the modal.</p>
      <div class="evaluated code" data-type="javascript">
  $.fn.modal.settings.templates.greet = function(username) {
  // do something according to modals settings and/or given parameters
    var settings = this.get.settings(); // "this" is the modal instance
    return {
      title: 'Greetings to ' + username + '!',
      content: '<span class="ui huge orange text">'+ username.toUpperCase() + '</span><br>is the best!',
      class: 'inverted',
      classContent: 'centered',
      dimmerSettings: {
        variation: 'inverted'
      }
    }
  }
      </div>
      <p>Reuse this whenever you need</p>
      <div class="code" data-demo="true">
          $.modal('greet','mom')
      </div>
      <div class="code" data-demo="true">
          $.modal('greet','dad')
      </div>
    </div>
  </div>

  <div class="ui tab" data-tab="settings">

    <h2 class="ui dividing header">Settings</h2>

    <h3 class="ui header">Modal Settings
      <div class="sub header">Modal settings modify the modal's behavior</div>
    </h3>

    <table class="ui celled sortable definition table segment">
      <thead>
        <tr>
          <th>Setting</th>
          <th class="four wide">Default</th>
          <th>Description</th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <td>detachable</td>
          <td>true</td>
          <td>If set to false will prevent the modal from being moved to inside the dimmer</td>
        </tr>
        <tr>
          <td>useFlex</td>
          <td>'auto'</td>
          <td>Auto will automatically use flex in browsers that support absolutely positioned elements inside flex containers. Setting to true/false will force this setting for all browsers.</td>
        </tr>
        <tr>
          <td>autofocus</td>
          <td>true</td>
          <td>When true, the first form input inside the modal will receive focus when shown.  Set this to false to prevent this behavior.</td>
        </tr>
        <tr>
          <td>restoreFocus</td>
          <td>true</td>
          <td data-since="2.7.2">When false, the last focused element, before the modal was shown, will not get refocused again when the modal hides. This could prevent unwanted scrolling behaviors after closing a modal.</td>
        </tr>
        <tr>
          <td>autoShow</td>
          <td>false</td>
          <td data-since="2.8.8">When true, immediately shows the modal at instantiation time.</td>
        </tr>
        <tr>
          <td>observeChanges</td>
          <td>false</td>
          <td>Whether any change in <code>modal</code> DOM should automatically refresh cached positions</td>
        </tr>
        <tr>
          <td>allowMultiple</td>
          <td>false</td>
          <td>If set to true will not close other visible modals when opening a new one</td>
        </tr>
        <tr>
          <td>inverted</td>
          <td>false</td>
          <td>If inverted dimmer should be used</td>
        </tr>
        <tr>
          <td>blurring</td>
          <td>false</td>
          <td>If dimmer should blur background</td>
        </tr>
        <tr>
          <td>centered</td>
          <td>true</td>
          <td>If modal should be center aligned</td>
        </tr>
        <tr>
          <td>keyboardShortcuts</td>
          <td>true</td>
          <td>Whether to automatically bind keyboard shortcuts. This will close the modal when the ESC-Key is pressed.</td>
        </tr>
        <tr>
          <td>offset</td>
          <td>0</td>
          <td>A vertical offset to allow for content outside of modal, for example a close button, to be centered.</td>
        </tr>
        <tr>
          <td>context</td>
          <td>
          body
          </td>
          <td>Selector or jquery object specifying the area to dim</td>
        </tr>
        <tr>
          <td>closable</td>
          <td>
          true
          </td>
          <td>Setting to false will not allow you to close the modal by clicking on the dimmer</td>
        </tr>
        <tr>
          <td>dimmerSettings</td>
          <td>
          <div class="code" data-type="javascript">
          {
            closable : false,
            useCSS   : true
          }
          </div>
          </td>
          <td>You can specify custom settings to extend <a href="/modules/dimmer.html">UI dimmer</a></td>
        </tr>
        <tr>
          <td>transition</td>
          <td>
            scale
          </td>
          <td data-since="2.8.8">Named transition to use when animating menu in and out, full list can be found in <a href="/modules/transition.html">ui transitions</a> docs.<br>
            <p>Alternatively you can provide an object to set individual values for hide/show transitions as well as hide/show duration.
                <div class="code" data-type="javascript">
                {
                    showMethod   : 'fade',
                    showDuration : 200,
                    hideMethod   : 'zoom,
                    hideDuration : 500,
                }
                </div>
            </p>
          </td>
        </tr>
        <tr>
          <td>duration</td>
          <td>
            400
          </td>
          <td>Duration of animation. The value will be ignored when individual hide/show duration values are provided via the <code>transition</code> setting</td>
        </tr>
        <tr>
          <td>queue</td>
          <td>
            false
          </td>
          <td>Whether additional animations should queue</td>
        </tr>
        <tr>
          <td>scrollbarWidth</td>
          <td>
            10
          </td>
          <td>Used internally to determine if the webkit custom scrollbar was clicked to prevent hiding the dimmer. This should be set to the same (numeric) value as defined for <code>@customScrollbarWidth</code> in <code>site.less</code> in case you are using a different theme </td>
        </tr>
      </tbody>
    </table>

    <div class="ui horizontal section icon divider"><i class="icon setting"></i></div>
    <h3 class="ui header">Callbacks
      <div class="sub header">Callbacks specify a function to occur after a specific behavior.</div>
    </h3>


    <table class="ui celled sortable definition table segment">
      <thead>
        <tr>
          <th class="four wide">Setting</th>
          <th>Context</th>
          <th>Description</th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <td>onShow</td>
          <td>Modal</td>
          <td>Is called when a modal starts to show. If the function returns <code>false</code>, the modal will not be shown.</td>
        </tr>
        <tr>
          <td>onVisible</td>
          <td>Modal</td>
          <td>Is called after a modal has finished showing animating.</td>
        </tr>
        <tr>
          <td>onHide($element)</td>
          <td>Modal</td>
          <td>Is called after a modal starts to hide. If the function returns <code>false</code>, the modal will not hide.</td>
        </tr>
        <tr>
          <td>onHidden</td>
          <td>Modal</td>
          <td>Is called after a modal has finished hiding animation.</td>
        </tr>
        <tr>
          <td>onApprove($element)</td>
          <td>Click</td>
          <td>Is called after a positive, approve or ok button is pressed. If the function returns <code>false</code>, the modal will not hide.</td>
        </tr>
        <tr>
          <td>onDeny($element)</td>
          <td>Modal</td>
          <td>Is called after a negative, deny or cancel button is pressed. If the function returns <code>false</code> the modal will not hide.</td>
        </tr>
      </tbody>
    </table>

    <h3 class="ui header">DOM Settings
      <div class="sub header">DOM settings specify how this module should interface with the DOM</div>
    </h3>

    <table class="ui celled sortable definition table segment">
      <thead>
        <tr>
        <th>Setting</th>
        <th class="four wide">Default</th>
        <th>Description</th>
      </thead>
      <tbody>
        <tr>
          <td>namespace</td>
          <td>modal</td>
          <td>Event namespace. Makes sure module teardown does not effect other events attached to an element.</td>
        </tr>
        <tr>
          <td>selector</td>
          <td colspan="2">
            <div class="code" data-type="javascript">
      selector    : {
        title    : '> .header',
        content  : '> .content',
        actions  : '> .actions',
        close    : '> .close',
        approve  : '.actions .positive, .actions .approve, .actions .ok',
        deny     : '.actions .negative, .actions .deny, .actions .cancel',
        dimmer   : '> .ui.dimmer',
        bodyFixed: '> .ui.fixed.menu, > .ui.right.toast-container, > .ui.right.sidebar, > .ui.fixed.nag, > .ui.fixed.nag > .close',
        prompt   : '.ui.input > input'
      }
            </div>
          </td>
        </tr>
        <tr>
          <td>className</td>
          <td colspan="2">
            <div class="code" data-type="javascript">
      className : {
        active    : 'active',
        animating  : 'animating',
        blurring   : 'blurring',
        inverted   : 'inverted',
        legacy     : 'legacy',
        loading    : 'loading',
        scrolling  : 'scrolling',
        undetached : 'undetached',
        front      : 'front',
        close      : 'close icon',
        button     : 'ui button',
        modal      : 'ui modal',
        title      : 'header',
        content    : 'content',
        actions    : 'actions',
        template   : 'ui tiny modal',
        ok         : 'positive',
        cancel     : 'negative',
        prompt     : 'ui fluid input',
        innerDimmer: 'ui inverted dimmer'
      }
            </div>
          </td>
        </tr>
      </tbody>
    </table>

    <h3 class="ui header">Config Template Settings
      <div class="sub header">Config Template Settings define default content for dynamically created modals</div>
    </h3>

    <table class="ui celled sortable definition table segment">
      <thead>
        <tr>
        <th>Setting</th>
        <th class="four wide">Default</th>
        <th>Description</th>
      </thead>
      <tbody>
        <tr>
          <td>title</td>
          <td>''</td>
          <td>Content of the modal header</td>
        </tr>
        <tr>
          <td>content</td>
          <td>''</td>
          <td>Content of the modal content</td>
        </tr>
        <tr>
          <td>closeIcon</td>
          <td>false</td>
          <td>Whether the modal should include a close icon</td>
        </tr>
        <tr>
          <td>actions</td>
          <td>false</td>
          <td>An array of objects. Each object defines an action with properties <code>text</code>,<code>class</code>,<code>icon</code> and <code>click</code>.
            <div class="ui info message">Actions will close the modal by default. Return false from the click handler to prevent that.</div>
            <div class="ui warning message">If you use any of the approve (approve, ok, positive) or deny (deny, cancel, negative) classnames for the <code>class</code> property, a <code>click</code> handler will be ignored. In such cases use the <code>onApprove</code> and <code>onDeny</code> callbacks instead</div>
            <div class="code" data-type="javascript">
            actions: [{
                text    : 'Wait',
                class   : 'red',
                icon    : 'exclamation',
                click   : function(){}
            }]
            </div>
          </td>
        </tr>
        <tr>
          <td>preserveHTML</td>
          <td>true</td>
          <td>Whether HTML included in given title, content or actions should be preserved. Set to <code>false</code> in case you work with untrusted 3rd party content</td>
        </tr>
        <tr>
          <td>class</td>
          <td>''</td>
          <td>Can hold a string to be added to the modal class to control its appearance.</td>
        </tr>
        <tr>
          <td>classTitle</td>
          <td>''</td>
          <td>Can hold a string to be added to the title class to control its appearance.</td>
        </tr>
        <tr>
          <td>classContent</td>
          <td>''</td>
          <td>Can hold a string to be added to the content class to control its appearance.</td>
        </tr>
        <tr>
          <td>classActions</td>
          <td>''</td>
          <td>Can hold a string to be added to the actions class to control its appearance.</td>
        </tr>
        <tr>
          <td>fields</td>
          <td colspan="2">
            <div class="code" data-type="javascript">
        fields         : {
          class        : 'class',
          text         : 'text',
          icon         : 'icon',
          click        : 'click'
        }
            </div>
          </td>
        </tr>
        <tr>
          <td>text</td>
          <td colspan="2">
            <div class="code" data-type="javascript">
  text: {
    ok    : 'Ok',
    cancel: 'Cancel'
  }
            </div>
          </td>
        </tr>
      </tbody>
    </table>

    <h3 class="ui header">Debug Settings
      <div class="sub header">Debug settings controls debug output to the console</div>
    </h3>

    <table class="ui celled sortable definition table segment">
      <thead>
        <tr>
          <th>Setting</th>
          <th class="four wide">Default</th>
          <th>Description</th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <td>name</td>
          <td>Modal</td>
          <td>Name used in debug logs</td>
        </tr>
        <tr>
          <td>silent</td>
          <td>false</td>
          <td>Silences all console output including error messages, regardless of other debug settings.</td>
        </tr>
        <tr>
          <td>debug</td>
          <td>false</td>
          <td>Provides standard debug output to console</td>
        </tr>
        <tr>
          <td>performance</td>
          <td>true</td>
          <td>Provides standard debug output to console</td>
        </tr>
        <tr>
          <td>verbose</td>
          <td>false</td>
          <td>Provides ancillary debug output to console</td>
        </tr>
        <tr>
          <td>error</td>
          <td colspan="2">
            <div class="code" data-type="javascript">
      error   : {
        dimmer    : 'UI Dimmer, a required component is not included in this page',
        method    : 'The method you called is not defined.',
        notFound  : 'The element you specified could not be found'
      }
            </div>
          </td>
        </tr>
      </tbody>
    </table>
  </div>

</div>
