---
layout      : 'default'
css         : 'slider'
element     : 'slider'
elementType : 'module'
standalone  : true

title       : 'Slider'
description : 'A slider allows users to select values within a range'
type        : 'UI Module'

themes      : ['Default']
---
<link rel="stylesheet/less" type="text/css" href="/src/definitions/modules/slider.less" />
<script src="/javascript/slider.js"></script>

<%- @partial('header', { tabs: 'module' }) %>

<div class="main ui container">

  <div class="ui active tab" data-tab="definition">

    <h2 class="ui dividing header">Types</h2>
    <div class="example">
      <h4 class="ui header">Slider</h4>
      <p>A standard slider</p>
      <div class="ui slider" id="slider-1"></div><br>
      <div class="ui input">
        <input type="text" id="slider-input-1" disabled>
      </div>
      <div class="code" data-type="javascript">
      $('.ui.slider')
        .slider()
      ;
      </div>
    </div>
    <div class="example">
      <h4 class="ui header">Labeled slider</h4>
      <p>A slider that show its labels</p>
      <div class="ui labeled slider"></div>
    </div>
    <div class="example">
      <h4 class="ui header">Labeled ticked slider</h4>
      <p>A slider that show its labels and ticks</p>
      <div class="ui labeled ticked slider"></div>
    </div>

    <div class="example">
        <h4 class="ui header">Bottom aligned labeled</h4>
        <p>A slider can display the labels below the track</p>
        <div class="ui bottom aligned labeled slider"></div>
    </div>

    <div class="example" data-since="2.9.3">
        <h4 class="ui header">Restricted Labels</h4>
        <p>You can restrict the display of labels to only the ones you want</p>
        <div class="ui labeled ticked slider" id="restrictedlabelsslider"></div>
    </div>
    <div class="code" data-type="javascript">
      $('.ui.slider')
        .slider({
            restrictedLabels: [0, 10, 15, 35, 80, 90, 100],
            min: 0,
            max: 100,
            step: 0,
            autoAdjustLabels: false
        })
      ;
    </div>

    <div class="example">
        <h4 class="ui header">Custom interpreted labels</h4>
        <p>You can provide a function which returns a custom label according to the label value</p>
        <div class="ui labeled ticked slider" id="interpretedlabel"></div>
    </div>
    <div class="evaluated code" data-type="javascript">
        var labels = ["α", "β", "γ", "δ", "ε", "ζ", "η", "θ", "ι", "κ", "λ", "μ", "ν", "ξ", "ο", "π", "ρ", "σ/ς", "τ", "υ", "φ", "χ", "ψ", "ω"];
        $('#interpretedlabel')
          .slider({
            interpretLabel: function(value) {
              return labels[value];
            }
          })
        ;
    </div>

    <div class="example">
      <h4 class="ui header">Range slider</h4>
      <p>A range slider which allow you to select a range between two values</p>
      <div class="ui labeled ticked range slider" id="slider-range"></div><br>
      <div class="ui input">
        <input type="text" id="range-slider-input-1" disabled>
      </div>
    </div>
    <div class="code" data-type="javascript">
      $('.ui.range.slider')
        .slider({
          min: 5,
          max: 100,
          start: 10,
          end: 90,
          step: 5
        })
      ;
      </div>
      <div class="another example">
      <p>A range slider can be limited to how far the distance between the two thumbs can be</p>
      <div class="ui labeled ticked range slider" id="slider-range-minmax"></div><br>
    </div>
    <div class="code" data-type="javascript">
      $('.ui.range.slider')
        .slider({
          min: 5,
          max: 100,
          start: 10,
          end: 50,
          minRange: 10,
          maxRange: 40,
          step: 0
        })
      ;
      </div>

    <h2 class="ui dividing header">Variations</h2>
    <div class="example">
      <h4 class="ui header">Disabled</h4>
      <p>A slider can appear disabled</p>
      <div class="ui disabled slider"></div>
    </div>

    <div class="example">
      <h4 class="ui header">Inverted</h4>
      <p>A slider can be inverted</p>
      <div class="ui inverted segment">
        <div class="ui inverted slider"></div>
      </div>
    </div>

    <div class="example">
      <h4 class="ui header">Reversed</h4>
      <p>A slider can be reversed</p>
      <div class="ui reversed slider"></div>
    </div>

    <div class="example" data-since="2.9.3">
      <h4 class="ui header">Thumb Tooltips</h4>
      <p>The slider thumbs can show a tooltip on hover containing the current value</p>
      <div class="ui slider" id="slider-tooltip-1"></div>
    </div>
    <div class="code" data-type="javascript">
      $('.ui.slider')
        .slider({
          showThumbTooltip: true
        })
      ;
    </div>
    <div class="another example">
      <p>The tooltips can stay visible all the time and can be customized by the <code>tooltipConfig</code> setting.<br>Refer to <a href="/modules/popup#tooltip">Tooltip Variations</a> for possible values.</p>
      <div class="ui range slider" id="slider-tooltip-2"></div>
    </div>
    <div class="code" data-type="javascript">
      $('.ui.slider')
        .slider({
          showThumbTooltip: true,
          tooltipConfig: {
            position: 'bottom center',
            variation: 'small visible green'
          }
        })
      ;
    </div>

    <div class="example">
      <h4 class="ui header">Vertical</h4>
      <p>A slider can be vertical</p>
      <div class="ui vertical slider" style="height: 200px;"></div>
    </div>

    <div class="example" data-class="colors">
      <h4 class="ui header">Colored</h4>
      <p>A slider can be different colors</p>
      <div class="ui red slider"></div>
      <div class="ui orange slider"></div>
      <div class="ui yellow slider"></div>
      <div class="ui olive slider"></div>
      <div class="ui green slider"></div>
      <div class="ui teal slider"></div>
      <div class="ui blue slider"></div>
      <div class="ui violet slider"></div>
      <div class="ui purple slider"></div>
      <div class="ui pink slider"></div>
      <div class="ui brown slider"></div>
      <div class="ui grey slider"></div>
      <div class="ui black slider"></div>
    </div>

    <div class="example" data-class="inverted, colors">
      <h4 class="ui header">Inverted Colored</h4>
      <p>A slider can be different colors while inverted</p>
      <div class="ui inverted segment">
        <div class="ui inverted red slider"></div>
        <div class="ui inverted orange slider"></div>
        <div class="ui inverted yellow slider"></div>
        <div class="ui inverted olive slider"></div>
        <div class="ui inverted green slider"></div>
        <div class="ui inverted teal slider"></div>
        <div class="ui inverted blue slider"></div>
        <div class="ui inverted violet slider"></div>
        <div class="ui inverted purple slider"></div>
        <div class="ui inverted pink slider"></div>
        <div class="ui inverted brown slider"></div>
        <div class="ui inverted grey slider"></div>
        <div class="ui inverted black slider"></div>
      </div>
    </div>

    <div class="example">
      <h4 class="ui header">Size</h4>
      <p>A slider can have different sizes</p>
      <div class="ui red small slider"></div>
      <div class="ui orange slider"></div>
      <div class="ui yellow large slider"></div>
      <div class="ui olive big slider"></div>
    </div>

  </div>

  <div class="ui tab" data-tab="examples">

    <h2 class="ui dividing header">Examples</h2>

    <div class="no example">
      <h4 class="ui header">Step</h4>
      <p>A slider can have a custom step...</p>
      <div class="ui slider" id="slider-custom-step"></div>
      <br>
      <div class="ui input">
        <input type="text" id="slider-input-3" disabled>
      </div>
      <div class="code" data-type="javascript">
        $('.ui.slider')
          .slider({
            min: 0,
            max: 10,
            start: 4,
            step: 2
          })
        ;
      </div>
    </div>
    <div class="another no example">
      <p>...or no step at all</p>
      <div class="ui slider" id="slider-unstepped"></div>
      <br>
      <div class="ui input">
        <input type="text" id="slider-input-unstepped" disabled>
      </div>
      <div class="code" data-type="javascript">
        $('.ui.slider')
          .slider({
            min: 0,
            max: 10,
            start: 3.82,
            step: 0
          })
        ;
      </div>
    </div>

    <div class="no example">
      <h4 class="ui header">Smooth slide</h4>
      <p>A slider can have a smooth slide</p>
      <div class="ui labeled ticked slider" id="slider-smooth"></div>
      <div class="code" data-type="javascript">
        $('.ui.slider')
          .slider({
            min: 0,
            max: 10,
            start: 4,
            step: 2
            smooth: true
          })
        ;
      </div>
    </div>

  </div>
  <div class="ui tab" data-tab="usage">

    <h2 class="ui dividing header">Initializing</h2>

    <div class="no example">
      <h4 class="ui header">Initializing a slider</h4>
      <p>Slider is initialized on pre-existing markup</p>
      <div class="test code" data-type="javascript">
      $('.ui.slider')
        .slider()
      ;
      </div>
    </div>

    <h2 class="ui dividing header">Behaviors</h2>

    <p>Behaviors are short english phrases used for accessing specific functionality in

    <p>Behaviors are accessible with Javascript using the syntax:<p>
    <div class="code" data-type="javascript">
    $('.ui.slider').slider('behavior', argumentOne, argumentTwo...);
    </div>

    <table class="ui definition celled table">
      <tr>
        <td>get value</td>
        <td>Get the current selected value</td>
      </tr>
      <tr>
        <td>get thumbValue(which)</td>
        <td>Get the selected value of one of the range thumbs. Provide either <code>first</code> or <code>second</code> as a string parameter</td>
      </tr>
      <tr>
        <td>get numLabels</td>
        <td>Get the number of rendered label ticks</td>
      </tr>
      <tr>
        <td>set value(value, fireChange = true)</td>
        <td>Set the current slider value. Pass <code>false</code> to <code>fireChange</code> to skip the <code>onChange</code> and <code>onMove</code> callbacks</td>
      </tr>
      <tr>
        <td>set rangeValue(fromValue, toValue, fireChange = true)</td>
        <td>Set the current range slider values. Pass <code>false</code> to <code>fireChange</code> to skip the <code>onChange</code> and <code>onMove</code> callbacks</td>
      </tr>
      <tr>
        <td>destroy</td>
        <td>Destroys instance and removes all events</td>
      </tr>
    </table>

  </div>

  <div class="ui tab" data-tab="settings">
    <h2 class="ui dividing header">
      Slider
    </h2>

    <h4 class="ui header">
      Behavior
    </h4>
    <table class="ui sortable celled definition table">
      <thead>
        <th>Setting</th>
        <th class="five wide">Default</th>
        <th>Description</th>
      </thead>
      <tbody>
        <tr>
          <td>min</td>
          <td>0</td>
          <td>The lowest value the slider can be</td>
        </tr>
        <tr>
          <td>max</td>
          <td>20</td>
          <td>The max value the slider can be</td>
        </tr>
        <tr>
          <td>step</td>
          <td>1</td>
          <td>The slider step. Set to <code>0</code> to disable step</td>
        </tr>
        <tr>
          <td>start</td>
          <td>0</td>
          <td>The value the slider will start at</td>
        </tr>
        <tr>
          <td>end</td>
          <td>20</td>
          <td>The second value to set in case of a range slider</td>
        </tr>
        <tr>
          <td>minRange</td>
          <td>false</td>
          <td>Makes sure that the two thumbs of a range slider always need to have a difference of the given value</td>
        </tr>
        <tr>
          <td>maxRange</td>
          <td>false</td>
          <td>Makes sure that the two thumbs of a range slider don't exceed a difference of the given value</td>
        </tr>
        <tr>
          <td>labelType</td>
          <td>number</td>
          <td>The type of label to display for a labeled slider. Can be <code>number</code> or <code>letter</code></td>
        </tr>
        <tr>
          <td>interpretLabel</td>
          <td>false</td>
          <td>
            You can specify a function here which consumes the current label value as parameter and should return a custom label text according to the given value
            <div class="code" data-type="javascript">
            interpretLabel: function(value){
            //do something with 'value' and return matching text
              return myCustomText;
            }
            </div>
          </td>
        </tr>
        <tr>
            <td>restrictedLabels</td>
            <td>[]</td>
            <td>An array of label values which restrict the displayed labels to only those which are defined</td>
        </tr>
        <tr>
            <td>showThumbTooltip</td>
            <td>false</td>
            <td>Whether a tooltip should be shown to the thumb(s) on hover. Will contain the current slider value.</td>
        </tr>
        <tr>
            <td>tooltipConfig</td>
            <td>
              <div class="code" data-type="javascript">
                {
                    position: 'top center',
                    variation: 'tiny black'
                }
              </div>
            </td>
            <td>Tooltip configuration used when <code>showThumbTooltip</code> is true<br>Refer to <a href="/modules/popup#tooltip">Tooltip Variations</a> for possible values.</td>
        </tr>
        <tr>
          <td>showLabelTicks</td>
          <td>false</td>
          <td>Show ticks on a labeled slider.<br>
                <code>'always'</code>will always show the ticks for all labels (even if not shown)<br>
                <code>true</code> will display the ticks only if the related label is also shown
          </td>
        </tr>
        <tr>
          <td>smooth</td>
          <td>false</td>
          <td>Define smoothness when the slider is moving</td>
        </tr>
        <tr>
          <td>autoAdjustLabels</td>
          <td>true</td>
          <td>Whether labels should auto adjust on window resize</td>
        </tr>
        <tr>
          <td>labelDistance</td>
          <td>100</td>
          <td>The distance between labels</td>
        </tr>
        <tr>
          <td>decimalPlaces</td>
          <td>2</td>
          <td>Number of decimals to use with an unstepped slider</td>
        </tr>
        <tr>
          <td>pageMultiplier</td>
          <td>2</td>
          <td>Page up/down multiplier. Define how many more times the steps to take on page up/down press</td>
        </tr>
        <tr>
          <td>preventCrossover</td>
          <td>true</td>
          <td>Prevents the lower thumb to crossover the thumb handle.</td>
        </tr>
      </tbody>
    </table>

    <h4 class="ui header">
      Callbacks
    </h4>
    <table class="ui sortable celled definition table">
      <thead>
        <th class="three wide">Callback</th>
        <th class="three wide">Context</th>
        <th>Description</th>
      </thead>
      <tbody>
        <tr>
          <td>onChange</td>
          <td>active content</td>
          <td>Is called when the slider value is changed</td>
        </tr>
        <tr>
          <td>onMove</td>
          <td>active content</td>
          <td>Is called when the slider is moving</td>
        </tr>
      </tbody>
    </table>
  </div>
</div>
